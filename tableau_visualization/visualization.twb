<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0308.0326                               -->
<workbook original-version='18.1' source-build='2024.1.1 (20241.24.0308.0326)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelRelationshipPerfOptions.true...ObjectModelRelationshipPerfOptions />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='15'>
        <calculation class='tableau' formula='15' />
        <range granularity='1' max='15' min='1' />
      </column>
    </datasource>
    <datasource caption='dim_country (warehouse.dim_country)+ (Happiness_index)' inline='true' name='federated.163rznm0l27v6c149z0i81nqkhrs' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0t05bsy0jwz4kq1at9sfs0gl7nm0'>
            <connection authentication='username-password' class='postgres' dbname='Happiness_index' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.0t05bsy0jwz4kq1at9sfs0gl7nm0' name='dim_country' table='[warehouse].[dim_country]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='postgres.0t05bsy0jwz4kq1at9sfs0gl7nm0' name='dim_country' table='[warehouse].[dim_country]' type='table' />
          <relation connection='postgres.0t05bsy0jwz4kq1at9sfs0gl7nm0' name='dim_region' table='[warehouse].[dim_region]' type='table' />
          <relation connection='postgres.0t05bsy0jwz4kq1at9sfs0gl7nm0' name='fact_econ_freedom' table='[warehouse].[fact_econ_freedom]' type='table' />
          <relation connection='postgres.0t05bsy0jwz4kq1at9sfs0gl7nm0' name='dim_date1' table='[warehouse].[dim_date]' type='table' />
          <relation connection='postgres.0t05bsy0jwz4kq1at9sfs0gl7nm0' name='dim_income_class' table='[warehouse].[dim_income_class]' type='table' />
          <relation connection='postgres.0t05bsy0jwz4kq1at9sfs0gl7nm0' name='fact_happiness' table='[warehouse].[fact_happiness]' type='table' />
          <relation connection='postgres.0t05bsy0jwz4kq1at9sfs0gl7nm0' name='dim_date' table='[warehouse].[dim_date]' type='table' />
          <relation connection='postgres.0t05bsy0jwz4kq1at9sfs0gl7nm0' name='fact_happiness1' table='[warehouse].[fact_happiness]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[bank_region]' value='[dim_country].[bank_region]' />
          <map key='[corruption (fact_happiness1)]' value='[fact_happiness1].[corruption]' />
          <map key='[corruption]' value='[fact_happiness].[corruption]' />
          <map key='[country (fact_econ_freedom)]' value='[fact_econ_freedom].[country]' />
          <map key='[country (fact_happiness)]' value='[fact_happiness].[country]' />
          <map key='[country (fact_happiness1)]' value='[fact_happiness1].[country]' />
          <map key='[country]' value='[dim_country].[country]' />
          <map key='[freedom (fact_happiness1)]' value='[fact_happiness1].[freedom]' />
          <map key='[freedom]' value='[fact_happiness].[freedom]' />
          <map key='[gdp_per_capita (fact_happiness1)]' value='[fact_happiness1].[gdp_per_capita]' />
          <map key='[gdp_per_capita]' value='[fact_happiness].[gdp_per_capita]' />
          <map key='[generosity (fact_happiness1)]' value='[fact_happiness1].[generosity]' />
          <map key='[generosity]' value='[fact_happiness].[generosity]' />
          <map key='[government (fact_happiness1)]' value='[fact_happiness1].[government]' />
          <map key='[government]' value='[fact_happiness].[government]' />
          <map key='[government_index]' value='[fact_econ_freedom].[government_index]' />
          <map key='[id (dim_region)]' value='[dim_region].[id]' />
          <map key='[id (fact_econ_freedom)]' value='[fact_econ_freedom].[id]' />
          <map key='[id (fact_happiness1)]' value='[fact_happiness1].[id]' />
          <map key='[id]' value='[fact_happiness].[id]' />
          <map key='[income_class (dim_income_class)]' value='[dim_income_class].[income_class]' />
          <map key='[income_class]' value='[fact_econ_freedom].[income_class]' />
          <map key='[index (fact_econ_freedom)]' value='[fact_econ_freedom].[index]' />
          <map key='[index (fact_happiness1)]' value='[fact_happiness1].[index]' />
          <map key='[index]' value='[fact_happiness].[index]' />
          <map key='[international_trade]' value='[fact_econ_freedom].[international_trade]' />
          <map key='[iso2]' value='[dim_country].[iso2]' />
          <map key='[iso3]' value='[dim_country].[iso3]' />
          <map key='[legal_index]' value='[fact_econ_freedom].[legal_index]' />
          <map key='[life_expectancy (fact_happiness1)]' value='[fact_happiness1].[life_expectancy]' />
          <map key='[life_expectancy]' value='[fact_happiness].[life_expectancy]' />
          <map key='[negative_affect (fact_happiness1)]' value='[fact_happiness1].[negative_affect]' />
          <map key='[negative_affect]' value='[fact_happiness].[negative_affect]' />
          <map key='[positive_affect (fact_happiness1)]' value='[fact_happiness1].[positive_affect]' />
          <map key='[positive_affect]' value='[fact_happiness].[positive_affect]' />
          <map key='[region (dim_region)]' value='[dim_region].[region]' />
          <map key='[region]' value='[dim_country].[region]' />
          <map key='[regulations]' value='[fact_econ_freedom].[regulations]' />
          <map key='[soc_support (fact_happiness1)]' value='[fact_happiness1].[soc_support]' />
          <map key='[soc_support]' value='[fact_happiness].[soc_support]' />
          <map key='[sound_money]' value='[fact_econ_freedom].[sound_money]' />
          <map key='[year (dim_date)]' value='[dim_date].[year]' />
          <map key='[year (dim_date1)]' value='[dim_date1].[year]' />
          <map key='[year (fact_econ_freedom)]' value='[fact_econ_freedom].[year]' />
          <map key='[year (fact_happiness1)]' value='[fact_happiness1].[year]' />
          <map key='[year]' value='[fact_happiness].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>iso2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso2]</local-name>
            <parent-name>[dim_country]</parent-name>
            <remote-alias>iso2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dim_country (warehouse.dim_country)_BBDF82ED26F14AC1808E5A0003E1DC90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso3]</local-name>
            <parent-name>[dim_country]</parent-name>
            <remote-alias>iso3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>3</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dim_country (warehouse.dim_country)_BBDF82ED26F14AC1808E5A0003E1DC90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[dim_country]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>30</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dim_country (warehouse.dim_country)_BBDF82ED26F14AC1808E5A0003E1DC90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>3</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[dim_country]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dim_country (warehouse.dim_country)_BBDF82ED26F14AC1808E5A0003E1DC90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bank_region</remote-name>
            <remote-type>3</remote-type>
            <local-name>[bank_region]</local-name>
            <parent-name>[dim_country]</parent-name>
            <remote-alias>bank_region</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dim_country (warehouse.dim_country)_BBDF82ED26F14AC1808E5A0003E1DC90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id (dim_region)]</local-name>
            <parent-name>[dim_region]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dim_region (warehouse.dim_region)_39407CFBCF7642489B160EE2CA2A0E71]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region (dim_region)]</local-name>
            <parent-name>[dim_region]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>30</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dim_region (warehouse.dim_region)_39407CFBCF7642489B160EE2CA2A0E71]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id (fact_econ_freedom)]</local-name>
            <parent-name>[fact_econ_freedom]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_econ_freedom (warehouse.fact_econ_freedom)_9759777CFF6B4BB4AD8C70B68615C24A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country (fact_econ_freedom)]</local-name>
            <parent-name>[fact_econ_freedom]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_econ_freedom (warehouse.fact_econ_freedom)_9759777CFF6B4BB4AD8C70B68615C24A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (fact_econ_freedom)]</local-name>
            <parent-name>[fact_econ_freedom]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_econ_freedom (warehouse.fact_econ_freedom)_9759777CFF6B4BB4AD8C70B68615C24A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>income_class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[income_class]</local-name>
            <parent-name>[fact_econ_freedom]</parent-name>
            <remote-alias>income_class</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_econ_freedom (warehouse.fact_econ_freedom)_9759777CFF6B4BB4AD8C70B68615C24A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>131</remote-type>
            <local-name>[index (fact_econ_freedom)]</local-name>
            <parent-name>[fact_econ_freedom]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_econ_freedom (warehouse.fact_econ_freedom)_9759777CFF6B4BB4AD8C70B68615C24A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>government_index</remote-name>
            <remote-type>131</remote-type>
            <local-name>[government_index]</local-name>
            <parent-name>[fact_econ_freedom]</parent-name>
            <remote-alias>government_index</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_econ_freedom (warehouse.fact_econ_freedom)_9759777CFF6B4BB4AD8C70B68615C24A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>legal_index</remote-name>
            <remote-type>131</remote-type>
            <local-name>[legal_index]</local-name>
            <parent-name>[fact_econ_freedom]</parent-name>
            <remote-alias>legal_index</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_econ_freedom (warehouse.fact_econ_freedom)_9759777CFF6B4BB4AD8C70B68615C24A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sound_money</remote-name>
            <remote-type>131</remote-type>
            <local-name>[sound_money]</local-name>
            <parent-name>[fact_econ_freedom]</parent-name>
            <remote-alias>sound_money</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_econ_freedom (warehouse.fact_econ_freedom)_9759777CFF6B4BB4AD8C70B68615C24A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>international_trade</remote-name>
            <remote-type>131</remote-type>
            <local-name>[international_trade]</local-name>
            <parent-name>[fact_econ_freedom]</parent-name>
            <remote-alias>international_trade</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_econ_freedom (warehouse.fact_econ_freedom)_9759777CFF6B4BB4AD8C70B68615C24A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>regulations</remote-name>
            <remote-type>131</remote-type>
            <local-name>[regulations]</local-name>
            <parent-name>[fact_econ_freedom]</parent-name>
            <remote-alias>regulations</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_econ_freedom (warehouse.fact_econ_freedom)_9759777CFF6B4BB4AD8C70B68615C24A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (dim_date1)]</local-name>
            <parent-name>[dim_date1]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dim_date (warehouse.dim_date)_2FFA4355FC854CE796F419A5D56420E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>income_class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[income_class (dim_income_class)]</local-name>
            <parent-name>[dim_income_class]</parent-name>
            <remote-alias>income_class</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dim_income_class (warehouse.dim_income_class)_9BE0A3B4C39445A68A34C002F73EF9E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[fact_happiness]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_751E904D6CF74F42AA3AF9551ABE9CB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country (fact_happiness)]</local-name>
            <parent-name>[fact_happiness]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_751E904D6CF74F42AA3AF9551ABE9CB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[fact_happiness]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_751E904D6CF74F42AA3AF9551ABE9CB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>131</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[fact_happiness]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_751E904D6CF74F42AA3AF9551ABE9CB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>131</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[fact_happiness]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_751E904D6CF74F42AA3AF9551ABE9CB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>soc_support</remote-name>
            <remote-type>131</remote-type>
            <local-name>[soc_support]</local-name>
            <parent-name>[fact_happiness]</parent-name>
            <remote-alias>soc_support</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_751E904D6CF74F42AA3AF9551ABE9CB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>131</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[fact_happiness]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_751E904D6CF74F42AA3AF9551ABE9CB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freedom</remote-name>
            <remote-type>131</remote-type>
            <local-name>[freedom]</local-name>
            <parent-name>[fact_happiness]</parent-name>
            <remote-alias>freedom</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_751E904D6CF74F42AA3AF9551ABE9CB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>generosity</remote-name>
            <remote-type>131</remote-type>
            <local-name>[generosity]</local-name>
            <parent-name>[fact_happiness]</parent-name>
            <remote-alias>generosity</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_751E904D6CF74F42AA3AF9551ABE9CB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>corruption</remote-name>
            <remote-type>131</remote-type>
            <local-name>[corruption]</local-name>
            <parent-name>[fact_happiness]</parent-name>
            <remote-alias>corruption</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_751E904D6CF74F42AA3AF9551ABE9CB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_affect</remote-name>
            <remote-type>131</remote-type>
            <local-name>[positive_affect]</local-name>
            <parent-name>[fact_happiness]</parent-name>
            <remote-alias>positive_affect</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_751E904D6CF74F42AA3AF9551ABE9CB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>negative_affect</remote-name>
            <remote-type>131</remote-type>
            <local-name>[negative_affect]</local-name>
            <parent-name>[fact_happiness]</parent-name>
            <remote-alias>negative_affect</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_751E904D6CF74F42AA3AF9551ABE9CB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>government</remote-name>
            <remote-type>131</remote-type>
            <local-name>[government]</local-name>
            <parent-name>[fact_happiness]</parent-name>
            <remote-alias>government</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_751E904D6CF74F42AA3AF9551ABE9CB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (dim_date)]</local-name>
            <parent-name>[dim_date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dim_date (warehouse.dim_date)_A4FD0C9D8ED14E94AC0F0399E1ABB7A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id (fact_happiness1)]</local-name>
            <parent-name>[fact_happiness1]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_5A6172E84EED470E9A599736789D3073]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country (fact_happiness1)]</local-name>
            <parent-name>[fact_happiness1]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_5A6172E84EED470E9A599736789D3073]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (fact_happiness1)]</local-name>
            <parent-name>[fact_happiness1]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_5A6172E84EED470E9A599736789D3073]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>131</remote-type>
            <local-name>[index (fact_happiness1)]</local-name>
            <parent-name>[fact_happiness1]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_5A6172E84EED470E9A599736789D3073]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>131</remote-type>
            <local-name>[gdp_per_capita (fact_happiness1)]</local-name>
            <parent-name>[fact_happiness1]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_5A6172E84EED470E9A599736789D3073]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>soc_support</remote-name>
            <remote-type>131</remote-type>
            <local-name>[soc_support (fact_happiness1)]</local-name>
            <parent-name>[fact_happiness1]</parent-name>
            <remote-alias>soc_support</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_5A6172E84EED470E9A599736789D3073]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>131</remote-type>
            <local-name>[life_expectancy (fact_happiness1)]</local-name>
            <parent-name>[fact_happiness1]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_5A6172E84EED470E9A599736789D3073]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freedom</remote-name>
            <remote-type>131</remote-type>
            <local-name>[freedom (fact_happiness1)]</local-name>
            <parent-name>[fact_happiness1]</parent-name>
            <remote-alias>freedom</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_5A6172E84EED470E9A599736789D3073]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>generosity</remote-name>
            <remote-type>131</remote-type>
            <local-name>[generosity (fact_happiness1)]</local-name>
            <parent-name>[fact_happiness1]</parent-name>
            <remote-alias>generosity</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_5A6172E84EED470E9A599736789D3073]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>corruption</remote-name>
            <remote-type>131</remote-type>
            <local-name>[corruption (fact_happiness1)]</local-name>
            <parent-name>[fact_happiness1]</parent-name>
            <remote-alias>corruption</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_5A6172E84EED470E9A599736789D3073]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_affect</remote-name>
            <remote-type>131</remote-type>
            <local-name>[positive_affect (fact_happiness1)]</local-name>
            <parent-name>[fact_happiness1]</parent-name>
            <remote-alias>positive_affect</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_5A6172E84EED470E9A599736789D3073]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>negative_affect</remote-name>
            <remote-type>131</remote-type>
            <local-name>[negative_affect (fact_happiness1)]</local-name>
            <parent-name>[fact_happiness1]</parent-name>
            <remote-alias>negative_affect</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_5A6172E84EED470E9A599736789D3073]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>government</remote-name>
            <remote-type>131</remote-type>
            <local-name>[government (fact_happiness1)]</local-name>
            <parent-name>[fact_happiness1]</parent-name>
            <remote-alias>government</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fact_happiness (warehouse.fact_happiness)_5A6172E84EED470E9A599736789D3073]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='GDP' datatype='real' name='[Calculation_717198252125343746]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR([index],[gdp_per_capita])' />
      </column>
      <column caption='Social support' datatype='real' name='[Calculation_717198252125769731]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR([index],[soc_support])' />
      </column>
      <column caption='Freedom' datatype='real' name='[Calculation_717198252126031876]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR([index],[freedom])' />
      </column>
      <column caption='Life expectancy' datatype='real' name='[Calculation_717198252126412805]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR([index],[life_expectancy])' />
      </column>
      <column caption='Generosity' datatype='real' name='[Calculation_717198252126908422]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR([index],[generosity])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='dim_country' datatype='table' name='[__tableau_internal_object_id__].[dim_country (warehouse.dim_country)_BBDF82ED26F14AC1808E5A0003E1DC90]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='dim_date1' datatype='table' name='[__tableau_internal_object_id__].[dim_date (warehouse.dim_date)_2FFA4355FC854CE796F419A5D56420E0]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='dim_date' datatype='table' name='[__tableau_internal_object_id__].[dim_date (warehouse.dim_date)_A4FD0C9D8ED14E94AC0F0399E1ABB7A9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='dim_income_class' datatype='table' name='[__tableau_internal_object_id__].[dim_income_class (warehouse.dim_income_class)_9BE0A3B4C39445A68A34C002F73EF9E2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='dim_region' datatype='table' name='[__tableau_internal_object_id__].[dim_region (warehouse.dim_region)_39407CFBCF7642489B160EE2CA2A0E71]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='fact_econ_freedom' datatype='table' name='[__tableau_internal_object_id__].[fact_econ_freedom (warehouse.fact_econ_freedom)_9759777CFF6B4BB4AD8C70B68615C24A]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='fact_happiness1' datatype='table' name='[__tableau_internal_object_id__].[fact_happiness (warehouse.fact_happiness)_5A6172E84EED470E9A599736789D3073]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='fact_happiness' datatype='table' name='[__tableau_internal_object_id__].[fact_happiness (warehouse.fact_happiness)_751E904D6CF74F42AA3AF9551ABE9CB1]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[bank_region]' role='dimension' type='ordinal' />
      <column datatype='string' name='[country (fact_econ_freedom)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country (fact_happiness)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country (fact_happiness1)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[id (dim_region)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[id (fact_econ_freedom)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[id (fact_happiness1)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='income class' datatype='string' name='[income_class (dim_income_class)]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;H&quot;' value='High' />
          <alias key='&quot;L&quot;' value='Low' />
          <alias key='&quot;LM&quot;' value='Lower middle' />
          <alias key='&quot;UM&quot;' value='Upper middle' />
        </aliases>
      </column>
      <column datatype='real' name='[index]' role='measure' type='quantitative' />
      <column caption='Region' datatype='string' name='[region (dim_region)]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[region]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='YEAR' datatype='integer' name='[year (dim_date)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[year (dim_date1)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[year (fact_econ_freedom)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[year (fact_happiness1)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[income_class (dim_income_class)]' derivation='None' name='[none:income_class (dim_income_class):nk]' pivot='key' type='nominal' />
      <column-instance column='[region (dim_region)]' derivation='None' name='[none:region (dim_region):nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_717198252125343746]' derivation='User' name='[usr:Calculation_717198252125343746:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_717198252125769731]' derivation='User' name='[usr:Calculation_717198252125769731:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_717198252126031876]' derivation='User' name='[usr:Calculation_717198252126031876:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_717198252126412805]' derivation='User' name='[usr:Calculation_717198252126412805:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_717198252126908422]' derivation='User' name='[usr:Calculation_717198252126908422:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
        </groupfilter>
      </group>
      <group caption='Action (income class)' hidden='true' name='[Action (income class)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[income_class (dim_income_class)]' />
        </groupfilter>
      </group>
      <group caption='Action (income class,Region,YEAR)' hidden='true' name='[Action (income class,Region,YEAR)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[income_class (dim_income_class)]' />
          <groupfilter function='level-members' level='[region (dim_region)]' />
          <groupfilter function='level-members' level='[year (dim_date)]' />
        </groupfilter>
      </group>
      <group caption='Action (year)' hidden='true' name='[Action (year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[year]' />
        </groupfilter>
      </group>
      <group caption='Top N by param' name='[Top N by param]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='AVG([index])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[country]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.948378' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0516224' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:income_class (dim_income_class):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;UM&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;LM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;L&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;H&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Türkiye&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DR Congo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:region (dim_region):nk]' palette='green_gold_10_0' type='palette'>
            <map to='#146c36'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#39894c'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#60a656'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#a7bf5a'>
              <bucket>&quot;America&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='red_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.163rznm0l27v6c149z0i81nqkhrs]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.163rznm0l27v6c149z0i81nqkhrs].[usr:Calculation_717198252125769731:qk]&quot;</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>&quot;[federated.163rznm0l27v6c149z0i81nqkhrs].[usr:Calculation_717198252126412805:qk]&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;[federated.163rznm0l27v6c149z0i81nqkhrs].[usr:Calculation_717198252126908422:qk]&quot;</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>&quot;[federated.163rznm0l27v6c149z0i81nqkhrs].[usr:Calculation_717198252125343746:qk]&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;[federated.163rznm0l27v6c149z0i81nqkhrs].[usr:Calculation_717198252126031876:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ukraine&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='15'>
          <calculation class='tableau' formula='15' />
          <range granularity='1' max='15' min='1' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='dim_country' id='dim_country (warehouse.dim_country)_BBDF82ED26F14AC1808E5A0003E1DC90'>
            <properties context=''>
              <relation connection='postgres.0t05bsy0jwz4kq1at9sfs0gl7nm0' name='dim_country' table='[warehouse].[dim_country]' type='table' />
            </properties>
          </object>
          <object caption='dim_date1' id='dim_date (warehouse.dim_date)_2FFA4355FC854CE796F419A5D56420E0'>
            <properties context=''>
              <relation connection='postgres.0t05bsy0jwz4kq1at9sfs0gl7nm0' name='dim_date1' table='[warehouse].[dim_date]' type='table' />
            </properties>
          </object>
          <object caption='dim_date' id='dim_date (warehouse.dim_date)_A4FD0C9D8ED14E94AC0F0399E1ABB7A9'>
            <properties context=''>
              <relation connection='postgres.0t05bsy0jwz4kq1at9sfs0gl7nm0' name='dim_date' table='[warehouse].[dim_date]' type='table' />
            </properties>
          </object>
          <object caption='dim_income_class' id='dim_income_class (warehouse.dim_income_class)_9BE0A3B4C39445A68A34C002F73EF9E2'>
            <properties context=''>
              <relation connection='postgres.0t05bsy0jwz4kq1at9sfs0gl7nm0' name='dim_income_class' table='[warehouse].[dim_income_class]' type='table' />
            </properties>
          </object>
          <object caption='dim_region' id='dim_region (warehouse.dim_region)_39407CFBCF7642489B160EE2CA2A0E71'>
            <properties context=''>
              <relation connection='postgres.0t05bsy0jwz4kq1at9sfs0gl7nm0' name='dim_region' table='[warehouse].[dim_region]' type='table' />
            </properties>
          </object>
          <object caption='fact_econ_freedom' id='fact_econ_freedom (warehouse.fact_econ_freedom)_9759777CFF6B4BB4AD8C70B68615C24A'>
            <properties context=''>
              <relation connection='postgres.0t05bsy0jwz4kq1at9sfs0gl7nm0' name='fact_econ_freedom' table='[warehouse].[fact_econ_freedom]' type='table' />
            </properties>
          </object>
          <object caption='fact_happiness1' id='fact_happiness (warehouse.fact_happiness)_5A6172E84EED470E9A599736789D3073'>
            <properties context=''>
              <relation connection='postgres.0t05bsy0jwz4kq1at9sfs0gl7nm0' name='fact_happiness1' table='[warehouse].[fact_happiness]' type='table' />
            </properties>
          </object>
          <object caption='fact_happiness' id='fact_happiness (warehouse.fact_happiness)_751E904D6CF74F42AA3AF9551ABE9CB1'>
            <properties context=''>
              <relation connection='postgres.0t05bsy0jwz4kq1at9sfs0gl7nm0' name='fact_happiness' table='[warehouse].[fact_happiness]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[year (fact_econ_freedom)]' />
              <expression op='[year (dim_date1)]' />
            </expression>
            <first-end-point object-id='fact_econ_freedom (warehouse.fact_econ_freedom)_9759777CFF6B4BB4AD8C70B68615C24A' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='dim_date (warehouse.dim_date)_2FFA4355FC854CE796F419A5D56420E0' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[year]' />
              <expression op='[year (dim_date)]' />
            </expression>
            <first-end-point object-id='fact_happiness (warehouse.fact_happiness)_751E904D6CF74F42AA3AF9551ABE9CB1' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='dim_date (warehouse.dim_date)_A4FD0C9D8ED14E94AC0F0399E1ABB7A9' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[income_class]' />
              <expression op='[income_class (dim_income_class)]' />
            </expression>
            <first-end-point object-id='fact_econ_freedom (warehouse.fact_econ_freedom)_9759777CFF6B4BB4AD8C70B68615C24A' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='dim_income_class (warehouse.dim_income_class)_9BE0A3B4C39445A68A34C002F73EF9E2' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[region]' />
              <expression op='[id (dim_region)]' />
            </expression>
            <first-end-point object-id='dim_country (warehouse.dim_country)_BBDF82ED26F14AC1808E5A0003E1DC90' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='dim_region (warehouse.dim_region)_39407CFBCF7642489B160EE2CA2A0E71' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[iso2]' />
              <expression op='[country (fact_econ_freedom)]' />
            </expression>
            <first-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='dim_country (warehouse.dim_country)_BBDF82ED26F14AC1808E5A0003E1DC90' unique-key='true' />
            <second-end-point object-id='fact_econ_freedom (warehouse.fact_econ_freedom)_9759777CFF6B4BB4AD8C70B68615C24A' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[id]' />
              <expression op='[id (fact_happiness1)]' />
            </expression>
            <first-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-guaranteed-value='true' _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' guaranteed-value='true' object-id='fact_happiness (warehouse.fact_happiness)_751E904D6CF74F42AA3AF9551ABE9CB1' unique-key='true' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-guaranteed-value='true' _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' guaranteed-value='true' object-id='fact_happiness (warehouse.fact_happiness)_5A6172E84EED470E9A599736789D3073' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[iso2]' />
              <expression op='[country (fact_happiness)]' />
            </expression>
            <first-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='dim_country (warehouse.dim_country)_BBDF82ED26F14AC1808E5A0003E1DC90' unique-key='true' />
            <second-end-point object-id='fact_happiness (warehouse.fact_happiness)_751E904D6CF74F42AA3AF9551ABE9CB1' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_97AA166DD12248018A612B8A6E31F46E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2_C795EFFA32704196AF9F19FC6C430F0F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3_EA275A5C57064069A2ADEB9EF7435DB6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 3' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4_3169F2A257584BF9953D71689C774114]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Happiness by income class</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dim_country (warehouse.dim_country)+ (Happiness_index)' name='federated.163rznm0l27v6c149z0i81nqkhrs' />
          </datasources>
          <datasource-dependencies datasource='federated.163rznm0l27v6c149z0i81nqkhrs'>
            <column-instance column='[index]' derivation='Avg' name='[avg:index:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='income class' datatype='string' name='[income_class (dim_income_class)]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='High' />
                <alias key='&quot;L&quot;' value='Low' />
                <alias key='&quot;LM&quot;' value='Lower middle' />
                <alias key='&quot;UM&quot;' value='Upper middle' />
              </aliases>
            </column>
            <column datatype='real' name='[index]' role='measure' type='quantitative' />
            <column-instance column='[income_class (dim_income_class)]' derivation='None' name='[none:income_class (dim_income_class):nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.163rznm0l27v6c149z0i81nqkhrs].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action2_C795EFFA32704196AF9F19FC6C430F0F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.163rznm0l27v6c149z0i81nqkhrs].[Action (year)]'>
            <groupfilter function='level-members' level='[year]' user:ui-action-filter='[Action3_EA275A5C57064069A2ADEB9EF7435DB6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.163rznm0l27v6c149z0i81nqkhrs].[none:income_class (dim_income_class):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:income_class (dim_income_class):nk]' />
              <groupfilter function='member' level='[none:income_class (dim_income_class):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.163rznm0l27v6c149z0i81nqkhrs].[none:income_class (dim_income_class):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;L&quot;</bucket>
              <bucket>&quot;LM&quot;</bucket>
              <bucket>&quot;UM&quot;</bucket>
              <bucket>&quot;H&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.163rznm0l27v6c149z0i81nqkhrs].[none:income_class (dim_income_class):nk]</column>
            <column>[federated.163rznm0l27v6c149z0i81nqkhrs].[Action (Country)]</column>
            <column>[federated.163rznm0l27v6c149z0i81nqkhrs].[Action (year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#8cd17d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]</rows>
        <cols>[federated.163rznm0l27v6c149z0i81nqkhrs].[none:income_class (dim_income_class):nk]</cols>
      </table>
      <simple-id uuid='{9928AAEC-91CB-4F75-BC02-A439064D8A2A}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Happiness through years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dim_country (warehouse.dim_country)+ (Happiness_index)' name='federated.163rznm0l27v6c149z0i81nqkhrs' />
          </datasources>
          <datasource-dependencies datasource='federated.163rznm0l27v6c149z0i81nqkhrs'>
            <column-instance column='[index]' derivation='Avg' name='[avg:index:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[index]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.163rznm0l27v6c149z0i81nqkhrs].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action2_C795EFFA32704196AF9F19FC6C430F0F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.163rznm0l27v6c149z0i81nqkhrs].[none:year:ok]' direction='ASC' />
          <slices>
            <column>[federated.163rznm0l27v6c149z0i81nqkhrs].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]' field-type='quantitative' max='9.0' min='2.0' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='1' field='[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]' scope='rows' value='' />
            <format attr='display' class='0' field='[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]' scope='rows' value='false' />
            <encoding attr='space' class='1' field='[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='right' />
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-style' value='italic' />
                <format attr='color' value='#998f8c' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='right' />
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-style' value='italic' />
                <format attr='color' value='#998f8c' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='right' />
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-style' value='italic' />
                <format attr='color' value='#998f8c' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#ffffff' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk] + [federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk])</rows>
        <cols>[federated.163rznm0l27v6c149z0i81nqkhrs].[none:year:ok]</cols>
      </table>
      <simple-id uuid='{52FE0B5C-380C-4EE2-8E6E-A7CBE7C23549}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Top N countries by average happiness</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dim_country (warehouse.dim_country)+ (Happiness_index)' name='federated.163rznm0l27v6c149z0i81nqkhrs' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='15'>
              <calculation class='tableau' formula='15' />
              <range granularity='1' max='15' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.163rznm0l27v6c149z0i81nqkhrs'>
            <column-instance column='[index]' derivation='Avg' name='[avg:index:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[index]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.163rznm0l27v6c149z0i81nqkhrs].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action2_C795EFFA32704196AF9F19FC6C430F0F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.163rznm0l27v6c149z0i81nqkhrs].[Action (year)]'>
            <groupfilter function='level-members' level='[year]' user:ui-action-filter='[Action3_EA275A5C57064069A2ADEB9EF7435DB6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.163rznm0l27v6c149z0i81nqkhrs].[Top N by param]' />
          <filter class='quantitative' column='[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]' included-values='in-range'>
            <min>3.3466316887857142</min>
            <max>7.6734283951764706</max>
          </filter>
          <computed-sort column='[federated.163rznm0l27v6c149z0i81nqkhrs].[none:country:nk]' direction='DESC' using='[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]' />
          <slices>
            <column>[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]</column>
            <column>[federated.163rznm0l27v6c149z0i81nqkhrs].[Top N by param]</column>
            <column>[federated.163rznm0l27v6c149z0i81nqkhrs].[Action (Country)]</column>
            <column>[federated.163rznm0l27v6c149z0i81nqkhrs].[Action (year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]' field-type='quantitative' max='7.6768325353781997' min='6.5042434122290143' range-type='fixed' scope='cols' type='space' />
            <format attr='auto-subtitle' class='0' field='[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]' />
              <text column='[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.163rznm0l27v6c149z0i81nqkhrs].[none:country:nk]</rows>
        <cols>[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]</cols>
      </table>
      <simple-id uuid='{46CD039A-CCD5-4926-A4FF-B4058E9916DE}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Happiness correlations</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dim_country (warehouse.dim_country)+ (Happiness_index)' name='federated.163rznm0l27v6c149z0i81nqkhrs' />
          </datasources>
          <datasource-dependencies datasource='federated.163rznm0l27v6c149z0i81nqkhrs'>
            <column caption='GDP' datatype='real' name='[Calculation_717198252125343746]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR([index],[gdp_per_capita])' />
            </column>
            <column caption='Social support' datatype='real' name='[Calculation_717198252125769731]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR([index],[soc_support])' />
            </column>
            <column caption='Freedom' datatype='real' name='[Calculation_717198252126031876]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR([index],[freedom])' />
            </column>
            <column caption='Life expectancy' datatype='real' name='[Calculation_717198252126412805]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR([index],[life_expectancy])' />
            </column>
            <column caption='Generosity' datatype='real' name='[Calculation_717198252126908422]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR([index],[generosity])' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[freedom]' role='measure' type='quantitative' />
            <column datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column datatype='real' name='[generosity]' role='measure' type='quantitative' />
            <column datatype='real' name='[index]' role='measure' type='quantitative' />
            <column datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
            <column datatype='real' name='[soc_support]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_717198252125343746]' derivation='User' name='[usr:Calculation_717198252125343746:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_717198252125769731]' derivation='User' name='[usr:Calculation_717198252125769731:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_717198252126031876]' derivation='User' name='[usr:Calculation_717198252126031876:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_717198252126412805]' derivation='User' name='[usr:Calculation_717198252126412805:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_717198252126908422]' derivation='User' name='[usr:Calculation_717198252126908422:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.163rznm0l27v6c149z0i81nqkhrs].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.163rznm0l27v6c149z0i81nqkhrs].[usr:Calculation_717198252126031876:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.163rznm0l27v6c149z0i81nqkhrs].[usr:Calculation_717198252125343746:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.163rznm0l27v6c149z0i81nqkhrs].[usr:Calculation_717198252126908422:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.163rznm0l27v6c149z0i81nqkhrs].[usr:Calculation_717198252126412805:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.163rznm0l27v6c149z0i81nqkhrs].[usr:Calculation_717198252125769731:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.163rznm0l27v6c149z0i81nqkhrs].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action2_C795EFFA32704196AF9F19FC6C430F0F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.163rznm0l27v6c149z0i81nqkhrs].[Action (year)]'>
            <groupfilter function='level-members' level='[year]' user:ui-action-filter='[Action3_EA275A5C57064069A2ADEB9EF7435DB6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.163rznm0l27v6c149z0i81nqkhrs].[:Measure Names]</column>
            <column>[federated.163rznm0l27v6c149z0i81nqkhrs].[Action (Country)]</column>
            <column>[federated.163rznm0l27v6c149z0i81nqkhrs].[Action (year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.163rznm0l27v6c149z0i81nqkhrs].[:Measure Names]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.163rznm0l27v6c149z0i81nqkhrs].[:Measure Names]' />
              <size column='[federated.163rznm0l27v6c149z0i81nqkhrs].[Multiple Values]' />
              <wedge-size column='[federated.163rznm0l27v6c149z0i81nqkhrs].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A4127F5E-8EA3-4392-80A5-693A73BD6C03}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dim_country (warehouse.dim_country)+ (Happiness_index)' name='federated.163rznm0l27v6c149z0i81nqkhrs' />
          </datasources>
          <datasource-dependencies datasource='federated.163rznm0l27v6c149z0i81nqkhrs'>
            <column-instance column='[index]' derivation='Avg' name='[avg:index:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='income class' datatype='string' name='[income_class (dim_income_class)]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;H&quot;' value='High' />
                <alias key='&quot;L&quot;' value='Low' />
                <alias key='&quot;LM&quot;' value='Lower middle' />
                <alias key='&quot;UM&quot;' value='Upper middle' />
              </aliases>
            </column>
            <column datatype='real' name='[index]' role='measure' type='quantitative' />
            <column-instance column='[income_class (dim_income_class)]' derivation='None' name='[none:income_class (dim_income_class):nk]' pivot='key' type='nominal' />
            <column-instance column='[region (dim_region)]' derivation='None' name='[none:region (dim_region):nk]' pivot='key' type='nominal' />
            <column-instance column='[year (dim_date)]' derivation='None' name='[none:year (dim_date):ok]' pivot='key' type='ordinal' />
            <column caption='Region' datatype='string' name='[region (dim_region)]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='YEAR' datatype='integer' name='[year (dim_date)]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.163rznm0l27v6c149z0i81nqkhrs].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action2_C795EFFA32704196AF9F19FC6C430F0F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.163rznm0l27v6c149z0i81nqkhrs].[Action (year)]'>
            <groupfilter function='level-members' level='[year]' user:ui-action-filter='[Action3_EA275A5C57064069A2ADEB9EF7435DB6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.163rznm0l27v6c149z0i81nqkhrs].[none:income_class (dim_income_class):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:income_class (dim_income_class):nk]' />
              <groupfilter function='member' level='[none:income_class (dim_income_class):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.163rznm0l27v6c149z0i81nqkhrs].[none:income_class (dim_income_class):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;L&quot;</bucket>
              <bucket>&quot;LM&quot;</bucket>
              <bucket>&quot;UM&quot;</bucket>
              <bucket>&quot;H&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.163rznm0l27v6c149z0i81nqkhrs].[none:income_class (dim_income_class):nk]</column>
            <column>[federated.163rznm0l27v6c149z0i81nqkhrs].[Action (Country)]</column>
            <column>[federated.163rznm0l27v6c149z0i81nqkhrs].[Action (year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#59a14f' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.163rznm0l27v6c149z0i81nqkhrs].[none:year (dim_date):ok]</rows>
        <cols>([federated.163rznm0l27v6c149z0i81nqkhrs].[none:income_class (dim_income_class):nk] / [federated.163rznm0l27v6c149z0i81nqkhrs].[none:region (dim_region):nk])</cols>
      </table>
      <simple-id uuid='{AA7455CB-FF50-4C91-9E81-E5708C2EAA4B}' />
    </worksheet>
    <worksheet name='map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Map of Happiness</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dim_country (warehouse.dim_country)+ (Happiness_index)' name='federated.163rznm0l27v6c149z0i81nqkhrs' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.163rznm0l27v6c149z0i81nqkhrs'>
            <column-instance column='[index]' derivation='Avg' name='[avg:index:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[index]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.163rznm0l27v6c149z0i81nqkhrs].[Action (year)]'>
            <groupfilter function='level-members' level='[year]' user:ui-action-filter='[Action3_EA275A5C57064069A2ADEB9EF7435DB6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.163rznm0l27v6c149z0i81nqkhrs].[Action (year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.163rznm0l27v6c149z0i81nqkhrs].[Longitude (generated)]' field-type='quantitative' max='17651290.57662886' min='-15949538.434787227' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.163rznm0l27v6c149z0i81nqkhrs].[Latitude (generated)]' field-type='quantitative' max='19552735.071389925' min='-9152924.5463765766' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]' />
              <lod column='[federated.163rznm0l27v6c149z0i81nqkhrs].[none:country:nk]' />
              <geometry column='[federated.163rznm0l27v6c149z0i81nqkhrs].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='193' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#998f8c' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.163rznm0l27v6c149z0i81nqkhrs].[Latitude (generated)]</rows>
        <cols>[federated.163rznm0l27v6c149z0i81nqkhrs].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C6458CE7-DA1E-46A3-83E1-A9908C382C8A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e9ebe0' />
        </style-rule>
      </style>
      <size maxheight='1700' maxwidth='1300' minheight='1700' minwidth='1300' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='15'>
          <calculation class='tableau' formula='15' />
          <range granularity='1' max='15' min='1' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='3' param='vert' type-v2='layout-flow' w='100000' x='0' y='0'>
          <zone h='29876' id='4' param='horz' type-v2='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='633' h='29876' id='9' is-fixed='true' param='vert' type-v2='layout-flow' w='48692' x='0' y='0'>
              <zone fixed-size='86' forceUpdate='true' h='6824' id='6' is-fixed='true' type-v2='text' w='48692' x='0' y='0'>
                <formatted-text>
                  <run fontsize='24' italic='true'>Happiness index research</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='10' />
                  <format attr='margin-top' value='20' />
                  <format attr='padding' value='10' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone h='23052' id='10' name='Sheet 3' w='48692' x='0' y='6824'>
                <layout-cache cell-count-w='17' minheight='204' non-cell-size-w='1' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='5' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='581' h='29876' id='36' is-fixed='true' name='Sheet 5' w='45461' x='48692' y='0'>
              <layout-cache has-max-size-w='true' maxwidth='571' minwidth='571' type-h='cell' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='10' />
                <format attr='margin-top' value='20' />
                <format attr='margin-right' value='0' />
                <format attr='padding' value='5' />
                <format attr='background-color' value='#ffffff' />
              </zone-style>
            </zone>
            <zone custom-title='true' h='29876' id='37' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='5847' x='94153' y='0'>
              <formatted-text>
                <run fontalignment='1'>Top N</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='10' />
                <format attr='margin-top' value='20' />
                <format attr='margin-left' value='0' />
                <format attr='padding' value='10' />
                <format attr='background-color' value='#ffffff' />
              </zone-style>
            </zone>
          </zone>
          <zone fixed-size='677' h='39824' id='5' is-fixed='true' param='horz' type-v2='layout-flow' w='100000' x='0' y='29876'>
            <zone fixed-size='563' h='39824' id='35' is-fixed='true' param='vert' type-v2='layout-flow' w='43308' x='0' y='29876'>
              <zone fixed-size='392' h='23000' id='11' is-fixed='true' name='Sheet 2' w='43308' x='0' y='29876'>
                <layout-cache cell-count-w='4' minheight='183' non-cell-size-w='30' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='5' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone fixed-size='286' h='16824' id='38' is-fixed='true' param='horz' type-v2='layout-flow' w='43308' x='0' y='52876'>
                <zone fixed-size='376' h='16824' id='32' is-fixed='true' name='Sheet 7' w='29692' x='0' y='52876'>
                  <layout-cache cell-count-h='1' non-cell-size-h='43' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='10' />
                    <format attr='margin-right' value='0' />
                    <format attr='padding' value='5' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='163' h='16824' id='33' is-fixed='true' name='Sheet 7' pane-specification-id='0' param='[federated.163rznm0l27v6c149z0i81nqkhrs].[:Measure Names]' type-v2='color' w='13307' x='29692' y='52876'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='10' />
                    <format attr='margin-left' value='0' />
                    <format attr='padding' value='5' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone h='39824' id='7' name='map' w='56692' x='43308' y='29876'>
              <layout-cache minheight='243' minwidth='200' type-h='scalable' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='10' />
                <format attr='padding' value='5' />
                <format attr='background-color' value='#ffffff' />
              </zone-style>
            </zone>
          </zone>
          <zone fixed-size='485' h='30294' id='47' is-fixed='true' name='Sheet 8' w='100000' x='0' y='69700'>
            <layout-cache type-h='fixed' type-w='fixed' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='10' />
              <format attr='margin-bottom' value='20' />
              <format attr='padding' value='5' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1950' minheight='1950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='57' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='99058' id='56' param='vert' type-v2='layout-flow' w='98770' x='615' y='471'>
                <zone fixed-size='86' forceUpdate='true' h='6824' id='6' type-v2='text' w='48692' x='0' y='0'>
                  <formatted-text>
                    <run fontsize='24' italic='true'>Happiness index research</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='29876' id='36' is-fixed='true' name='Sheet 5' w='45461' x='48692' y='0'>
                  <layout-cache has-max-size-w='true' maxwidth='571' minwidth='571' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='29876' id='37' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='5847' x='94153' y='0'>
                  <formatted-text>
                    <run fontalignment='1'>Top N</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='23052' id='10' is-fixed='true' name='Sheet 3' w='48692' x='0' y='6824'>
                  <layout-cache cell-count-w='17' minheight='204' non-cell-size-w='1' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='23000' id='11' is-fixed='true' name='Sheet 2' w='43308' x='0' y='29876'>
                  <layout-cache cell-count-w='4' minheight='183' non-cell-size-w='30' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39824' id='7' is-fixed='true' name='map' w='56692' x='43308' y='29876'>
                  <layout-cache minheight='243' minwidth='200' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='256' h='16824' id='32' is-fixed='true' name='Sheet 7' w='29692' x='0' y='52876'>
                  <layout-cache cell-count-h='1' non-cell-size-h='43' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='163' h='16824' id='33' name='Sheet 7' pane-specification-id='0' param='[federated.163rznm0l27v6c149z0i81nqkhrs].[:Measure Names]' type-v2='color' w='13307' x='29692' y='52876'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='30294' id='47' is-fixed='true' name='Sheet 8' w='100000' x='0' y='69700'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{18D3D43F-C81D-46F0-91D8-09DE3AAD5301}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.163rznm0l27v6c149z0i81nqkhrs].[avg:index:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{D6165CDF-59DE-4279-8EF6-826F6C7DF9FA}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.163rznm0l27v6c149z0i81nqkhrs].[none:income_class (dim_income_class):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C9D63248-E227-4659-9D83-50024F82D59F}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{AA982CB5-286B-4D0E-A68B-21C0D1BBB936}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B3CAB527-1B17-403C-9A4D-CA53E28D482C}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.163rznm0l27v6c149z0i81nqkhrs].[none:income_class (dim_income_class):nk]</field>
            <field>[federated.163rznm0l27v6c149z0i81nqkhrs].[none:region (dim_region):nk]</field>
            <field>[federated.163rznm0l27v6c149z0i81nqkhrs].[none:year (dim_date):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B3EE989-1859-4BEA-BDCF-6B205135446B}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.163rznm0l27v6c149z0i81nqkhrs].[:Measure Names]' type='color' />
            <card pane-specification-id='0' param='[federated.163rznm0l27v6c149z0i81nqkhrs].[Multiple Values]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B487E2B6-0E55-4353-9B6B-CC2941B0091C}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Sheet 7'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 8'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
      <simple-id uuid='{D06ED488-0D14-48C2-BE0F-F131DB83F9EA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29d5Ak2Xng98vM8r6ruqq9dzM93s+6We+wAElwAWIJUARIkNQdQ7w7nUTG
      6SIknRRxilCETEh/3MUdqSAPIECAXLg12MX6HW96ekxPe2+ru8t7k5WZ+qNme7a3e7zZnpn8
      RUxMV76X73uZ+b73Pfs9YSk0paGj85AiftkZ0NH5MtEVQOehRlcAnYcaXQF0HmoMn/1ht7mx
      2zxfZl50HnCKcp54YmnVNaPRTIW7+kvKkW4BdB5ydAXQeajRFUDnoUZXAJ0NwWDfOc6ePUv/
      8MQ1483OzqABqUQS9Q7I1RVAZ0Owedsu5GKeLV2tFDIJLvYPoWoQXpynb2AY9fJ6hb5TH3Ly
      whgjAwMUL98bXpxjbHoeRc5x4UIfsqqRSCYAlVgsQSIW5tLFi+TzWf7uBz+kf3iCRCLJ/Oys
      rgA6G49jJ3voaApw/NQ5enr7aK11caKnD4CK+k6yi6MULlf/SmaJCxNR6vwVHD16nE2b2jh2
      9DgDA5eAIufPX+LE8eO0dzZw9twIHR0dbOlq5cSxj1EM1htTgGAwuOp3OhEllS3cuSfWZE6c
      7Llz6V2DdDTIxaHJG46vFlN8+Ompu5ije0f/mSME43fwu90ltM+tTrPbHciFIkaTaeXaE4/t
      5fCR0yu/BUH47M6VayW5RCoWoaCAx+vDYrEioVAqFlFUFWdFFY01lddXAK2U4d33D6+69vFv
      fk1RkG7x8dailhQamhrvWHrXQjBYqK/x33D88Uu9uKrq7mKO7h0XR2ep8pi/7Gxcle7urQA8
      /shexqZDPHpgF6nYMsGkyv4dXStxTA4/f/Cdr2MCJHsV21sqWAjHefzxxxgamuCxxx9l2+Yu
      FuMlDuzZejldE93dnezfvY3RiRm2dncDIP3lX/2rfwdgMlowGS1rMjV56Qyir43mWl/5gpLn
      5PkRHtmznUI2xfnes/SeP080LVNXE0AALvVdJJ+Jc+z4SbKKRLXfC0Bf30VyqQjHjp+iiImA
      rzzxNjI0SF1zKwYBLl7sQymkOX78JNGMTF11ubBmklGOHz3C6PQ8dfUNGCQBuZDh1PFjXOgb
      RJHM+L1uVLnAmVPHOXehj9znZH/G8MgYzY0NKIUkA2NzRIPTnDxzFsnqxut2AJCILnP86FGG
      x6cZHJ3huWcPYRBgfmqUY8dOkCxCbcBHKRfn7MBkOY+ayvneXiqraxAv10jzk8PIBhfL04MM
      Ti3RUFtFeHGWI0eOsRjL0lBXjQCk42GOHjnC4MgENncFLrsVTVMYuHCW0z3nMTkq8DjtgMbU
      2BCnTp9hdHwaf3UtFpOBZHieYEJGTi1z8twgrU0NZFNxThw/yuDoJN5ANWJumbFgDiUT5szZ
      81jdftwO650otzeMopbIFzKrrkmSAaul/N7NlnL5M5gsVAUqEQQI1NRRX3tlosxiLsdxud18
      Vu/bHC68bieiZKS6OoAkCFhsDnwVHqxWy+V0BcwWM0azlUqvB4ulXBFc1wKc6xtj99b2ld+z
      Ixep79wOQCKRoKGtm1deeYWlwePMJ0qg5Dl25Cglo5sXX3yBsx+9wXJGQZPTHD1yHMFWyUsv
      Ps+xd39OvAigcvbCJcwi5GNzHD52mqRs4LkXX+Tc6WMAhGZHeO9wD/see5p2n4HfHDkLmszP
      X/8Vndv38dILzyBpJUDjVz9/nfrO7bz80gtYpNUrvQvxeYZnIgCMXOjhwsAIrqpGXnzuET75
      qGzlhs6d5FjvEI8ceoZDezvB6sUswunDv2E2VuKFl19m6uzHzCWKGKxOeo58QklT+fjdt3BW
      N2EQhRV5x4+f4tQnbzE4E6G5oY6B3uNcHFvk2RdeRF4aoG8iRCG5zBvvHeHAE8/w9BP7kQt5
      NFXmzV/8HGtlIy89/xRvv/FLALRSnrxq5tnnX+Lgljre/qD8fnpOHKfv3CmOnh2ktaWZxalB
      3vn4JDv3P86je7ehllQu9p5DMIhUN3fxzIHNfHz0zPU+/YbA7Xbd1fQN1wrU5BTzyzE+fe/t
      lWt9Fy7y5//9vwFAVWT6Lp4kX5SZiWm86DAwM3yWzY+8QGtDWWurAwFEUWD80jl2P/UVmmoD
      AFQF/IgCxOdG8NSVzduFs7289Lu/R3uVE03O4PIEQJV573Avr337NSQBKv2VaKEYajbGTChB
      NpvF5w7Q2d4KaobJmRA7slkEn5uuzvZVz3Ox9xw7dh8qP8dYkG++9h1MIoQmLtDYuZl8YpG+
      2RTf/K3nARi6OMr2PXuJzA4RVr18ZddmAHxez+V2qsSOzgA/+NHrPP/CCzQEriwlUXJRpoNR
      vvvKq/g9dvKJRY7OZVbSrqz0oagqoYVZMkWNbC6Hv8JDs8PDmY/fpnP/s7TWl62X216u9YrF
      EonwPO8O91NIR6hpPwgoDI9P88I3vktbvR9NyfOjfzjMt7/zLUQBuHzve8EEr33nq4jA2LkL
      dG3efMOF5EHmmgowdukcu576Kk/sKhckTckRTeTwWCR6jrxPzhTgyWefx6Bk+Ombh7FIcL5/
      gmd+Z385filPTDFTaRU5PDzLy998AgBVzpAVHLiM8OG5PnY/9duAxsRymv1VTgAm+ntp2bKL
      xYlLJHJFfv3Wmyv52v/oU4h2J9//zu/Qd/Ecv/zlPP/8z/8Yo2jnT77/HS72XeStX/6S7//z
      P8du/NzzLCb51jMulFwUzerDdNn+nb0wxP6XvsH5o2+w++ALK/H7Rhf57dee4YOffUTB4uLN
      N8t5EM1V1HlMqKU8sZyChmFV4QcYutDL87/7HfweOwAXzpxALkoraYCBZ/cFsBkCfMXqoefI
      +4QKZv7wm1/l0vA4lWmV0XPlmK3dO8nGFnnj/RM8+/yzHKhw8fbPfsLu7Z1EZwZp2fs8bfXl
      puL8aB+1Xdv5nCEiF53B6mtcMfcXh+f5yjcPXevTPzRcUwHOXZrgK689sfJ7ZvA8TZt3AgqX
      xhf53veeR5HzfPDrN+nc/jRaKUtateIwCqilAu+8+RaHnn0BtZCkaHBhlUCR87z9xts8/cIr
      oCksJhWedZrIRqax+ppW2nXnh2b4yjefYOb8BJt27OeZfZtAUwmFo1S6DIRjaSr9NRx6ykcw
      9EskTSYUSeOv9PPYoadYDIYwfK6fnovOYK5oQAQunT/L5h17ygFqkUhOwGuViMYS1BjKxSS6
      NIViqcAkQiKd5Stf+xZuiwG5kCWd11ALGd56+10OPf9b/Pqnf0s8r+CxXBHYP7nM1w9c6WzH
      EykOPvkqrX47aqlILJlFy8bJmp3UNbVT6fPy5gcnAYUiFr761a8hCJCKhTE6vJx+7x/Z//Rv
      46+wMjcxSKhgwGMWef9cP3ue+/qKnEKhQEku1/qKXESTTJw/e44de54rP24hQcHgxHLnxjDu
      a66uAGoBZ6ABh/FKVTIfSrH70QOASIPfxq/e+jUetwfV7GNrey1T/cdJZTO88eabSJKRfU+9
      SKDCyXDPJ6SzGd58800kg5lHn3uFSredXHSOls07AZidnWf3np2XZRfxBBqwStC+bR8Dv3qT
      NxZHMZvMbNq+G0VROP7Ju2iSGZPRxHMvv4KgKPQc/4SCJmEyGXn0uZcxf66HMze7wN69uwEI
      ZwQebykXzlRogY5tZWV45NDTvP3rnzFSXQNyhp17HwHg2eee5te/+CdcLjdWu5P9B/Zz9Mgn
      PP3S13DbTDxycA+T0wvs6moAQCtl8VY387lXx6NPPc9b771Bv9OFxWpjz74DlIox3n/3fcxW
      Oxa7nVdeeRGQeHxvN//4T6/jcjpwe6s4eKCSju4dfPzBG4xX+vC6bWzdsQfQEOxe/J8zc61b
      9zHwqzd4480ZbK4KnnnyUTKCnRZ/2RItzc2yfffemy0nDyzCZ3uC78Ry6F/89Me8+OrvYzMI
      q66//g8/5mvf+vaqAqnz8PFgL4fWZFyVdWsKP0qeiupGvfDrbEjuqAXQ0bkWD7YF0NG5x8xO
      jROJp276vnw+v/L3NUeBdHQ2MllZRQ5OIYjNLC/MU1PlZ345TKCqmvDcLJokYXV6sEkKqYKG
      12EmU9RQCilsTh/+ygrdAujc37gcFkYnphAElejCIlUtXWQSS1gdPiTJAEqRTCbDwsI8oXCM
      utoqRvr7MDvKM8wrFqAo5yEb/9IeROfBR1FKdzbBUp6U5mNHu5+JuSU8AS9mCSS3DzChKCYk
      SSIdL+H1+QhU+RGAfY8/RT4ZwWUJXOkE6+h8GeidYB2dLxFdAXQeavRRIJ0HgqOffkh79y4k
      VAyCQhETiWiYhtoAoUSOgM9NaGmZ2sZGgrNTpIuwqb3ligIYjeZ1N8To6NwpFGXthpg7iSCI
      RGMR1JKC+fIWyngsxtTINOnmGpornVzoHaShqxU5vAh8zgKYjBZ9JljnrlKU83dNAZrbOqmq
      9FDMpzEayosDZVlGLuVx2u1YHS5sNhs+r8ri7DROR3kXmr4UQueeoS+F0NHZYOgKoPNQs0YB
      zp3rBWCgr/+GEkhEQhRvwUfd7NwMAMdOnrj5m4lz8tjALdyn8yByobcXRcsxNxu56XvXDIPG
      4zEAkskkcjbB+YExVMGIzVBEVgSKmhG7mEPWDJQEM26TSIvPzW/efh+z2ciuRx/n/JkeDBY7
      LVUuZkJxmlo6mB25iGDzsm/nVmKhBT7++COee+m3WZyd5Fg+Q9vug1w6epjmLTtILk5RLCk0
      b9lHZGGMGjuknB0sXDqJpmRp3fco0xMjZDNBDj77LFJ6geFlDVshhM3rY3x6AYfTTaPfweTs
      AlZ3gEJ8nqLkxGNUSBcUOrt34LIZ17wQnfsPt8vK1PQMpaTGmeV57E472dgSdpsDg92BqqkY
      NYGx0SFqW1qxWNwISo62tra1FiAeXuTs2bNMLyyTjMcpqSozUzMkczK7d++hlE2QLpTYvXsP
      xVScdDKJiorbW82mWjsjly4SK5mJBBeRrFaUkkIqlcZmsZBLJiioUOGvpaOjg1p/BdUNLezZ
      VMt8JI1kcdHe5CdXkjj42EEm+i+STCYpZpJkwtOUPO20VrnJlaCptZMWn42kDGZ3LaGZIRYi
      SSZGBrGaDAQXgkSjUUBidnKaaLrAwd3bsVqtlIp50tn8Oq9S535EMNiQlDzK565VVtexubud
      hfkw2eUgVouBivpWNFVEjs/i8tcD61iA5vbN7Nq1G6vJglwsgCBR4fWAnKf3bA82TyXZ6By9
      PWdw+PxYURARcbkcmOwm6qpbyF06j72pEUkQMBsl8rk8BoMBtZRBUQERlHyOYCiGy+VCNNlx
      aCasVX7AhNWgcOr4KVq37GX03BFGkzka9+wifOEE/ckFWmt34HLZsZi0Fc8OTT4TQarZWmNh
      YCpIU1MThVwUSTLg9rhxOMq1vSiJSBLk88UvPrrOfUpTcxPQtG7Yk0/sX/m7ph5AZXR0Ar+r
      7BjrhodB+wb62da9BYD+gT62dG+7M7m/YUqcP3OORCbPI4eeWCn4n4Ud+egYB5568gvXdTYS
      G3EYVJ8H0LlnbEQF0OtLnQ1PMZtkcGiIaHL1LHImnSGbzV71vkjk6qNC8Xh578uqPkChUKBY
      1NvGOncek8mEcIvVbTIeR0HCaSiwsJgmHE1T6bGilIqMjY2zZctWpifHqWlqIx0P4bI6WMop
      2KTywripuRA+r4NMMo7LV0s4EsZgNOPxeFYrQLFYxOl03onn1dFZRSqVwmy5tWFnu8dHe4XC
      4OQSqdA8gYZaCjLIBZmaulq8bhvp2maykTkKmJHzGRpbu4lMj7G8HCIyM4vk3szW9nrOnlug
      ZVsH4YUFQF8OrXMfYDJKTE4vsrmrnUytH4tBQLC4UIo5SoUMoVgaOZeioX0ri/PzVNXWIBkF
      rPV1aHIeq8NHRaUHDBJbdrpZXpynrq4W+EInWFUk3QLo3BU+swB6J1hHZwOhK4DOA8F6o0HX
      GiH6zDmW3gfQeSCYm5unqtJDKJHDbZVIFTRKhRxVlW4WwimqvA5CoQi1TS3MT0+hGcxs7mjV
      LYDOg0MomqS9pZGpqSkymfKcQTqdIT63QDCTp6utisELo9R3bcZqKh+QoFsAnQcCn8+LUVQZ
      m5qlvr6ebEnE47ShFHO4Kr343W6QTLR3NTE7MkyFrxJYRwFKpTvsvUtH5x7g85VPMXVVrA0L
      lFfBAeD1gtfrXvm9RgEMBt0o6Dw86H0AnYcavbrX2fB8/NGHHNzRxhI1GDJB3J4KLvX3U1lV
      g1mSqG+sZ256hrr6GqKxNKFomPbGOuZDCWoDPkKhJQK1jUSDs0TTRXwuM1a3H5fdoiuAzsan
      uamWyal5ioY8Ba1ARpaorPQhqUUqXRZOnO3HblSQc3HiUgCXCIl4jPDUCKl0M43NlYxf6MXW
      0IVVDrMcWsZvtOOyW/QmkM7Gx+qowG634gt4MUtG/H4vhWwao82Nze6g2u9DMlrw+/3UVfux
      Wm3Icgmb047F6sBus+H2eYkvzqIKEg67g0KhAOhrgXTuEfpaIB2dDYiuADoPNboC6NznaAxe
      usDU7MJVY8jJRSK59cP0USCdBwANDRgdHWUpGKS6vp5cbImRqQg7d28iH1lAc+U5PnSB1sYa
      UoIHn8tCR0ujbgF07nc0jAYz0UgEQclQX1/LciyPyWpn2/YtoCgIgoiGQHN7F1VeF01tnRjF
      8tF4ugXQuc8Rad+0edWV5jVxutbe5mi6fPc1mI1NMxubufW86ehscK6qALOxadzWCtxWN7Nx
      XQl0HkyuYQEEQEPTNFRVuXo0HZ0NwNz0BDPzi9eJpRCPp1ZduWofoKGikdn4DKemjiEKIk3e
      ljuRTx2dO4+cIF2ysqmpmuDcNImciokC8ZxCZ1MNU1NzBOqriYRCmExuwkvzmF1eGmoC1+4D
      NHga+cbO32cyOsHI8tC9ehwdnZvDYCcXnWdmfpGFhQWikQiiyYrX7SC4MI+SizAfyiCIAkom
      wlJSJhIOAze4FiiRi/N/fvy/8VfP/o84zPpaIZ2bZ6OuBbqhLZF2o4Nv7Pg2f3PiP/DfPP7f
      3ZOM6ejcC254S+T2up1cWrzApxMf8mzni3c9Yzr3Hk3TGF4eRAA6A5sRBOHLztJd56Zmgr+1
      6w84NXWM2dj03cqPzl3kswIezax2G65qKqH0Mu8Pv0OHv4t2fxc/6f0hn459RF/wArOxaVL5
      JAAzsSkGFy8xE5u6KRm3yuTEBBoKkUj8KjEUxoeHGRqdXBNy0+7Rr4ckSnz/kT/nPx79f/i3
      L/wvmCTTzdx+y6TySZwW17phOTnLZGQCp9lJQ8X6x+TcroyNQrniEWioaFw3PJwJEUotEXBW
      4bP714QPLvXTFdjMRGSMk9Plimw5XW6T+x0B6twNTEbGAWj3d5IpphkLDZPIxYlkI2SLGQ61
      Pc2T7c9yePwj3rz0CyxGCzaTHavRhtVoxSgaebL9WSYj49jNDswG8209s5pPMj2/iJzJEV4K
      YnFYkAxWIuEo/koPtbW1VAUqSMpGJkaHUA027EaNRE5F1Eo35x79RqhyVvPS5lf44Zn/j+/t
      /zMkUbpq3EgmzFJqEaNkoM3XgfiFuJlimtnYDALgd1QhCAL5Ug5ZkcnJWRRVRVaKeO0+JiJj
      GC8rnKwUyZfyyEqRTCHDi5tfYSIyxuHxj/HZfAifc0RvMpgoKSUEwGuvxCgZkRWZkiqjqCol
      tUQqn8Bjq2A6NonfUYXdZMdmsiNeTidTSDOXmMVmstPgWVv48nKOxVQQEKh21mAxWtbEmY1N
      k5Wz1HsasJsca8K/KEPVVPJynlQhSaaQZjm9SHf1dkDj5NRRXBYPslKkUCpQVArk5TxOi4sD
      TY9yYuoIc6PvX85bOY1UIUlTRQtOiwtZkfHafOys202Vs2bVNyyUyjul2v2d637TmdgUs7Fp
      GjxNbKneTqGUJ1PMkJOz5OQcilpiITmPrMpXLRc3g8HuoZSNoxVlphZTdHa2Ep4cxhxooFCQ
      QSuxEErR2dnMRxfOUN/axfLyMsuxHE0NNdd1j37LO8LeGXiTTDHNy92/hd1kX7muqAqT0XFG
      lgeJZqP8wd4/YjIyzt/3/O2aNERB4N889+8Ajf/7k/8di9GCxWDFKBmxGm2YDGaqnTUcbH6M
      nplTCIKAxWDBZDBjMVgwSiZKqkwyn0QQBJxmF8l8gnQhRaqQJJlPEMtG+e7+PwU0/t/D/wcG
      0YBRMmEQDQiCgFEy0eJt5Ym2pzk8/hGXghdXPqqmlRdMNVY08939f8J0bIq/O/WfEIVygTFK
      ZX/3qqbwb5//XwH49+/9T6ja6oOTVU3hjw781zRWNPNfTv81M+s0Ib8oQxINWAwWnBYXVqMN
      t8XDluryuWyRbBibyY5ZMmMxWjBd/j+WjZKXc9jNThqvYg0zxQxWg2VNZXQnWU/GrY4C5fN5
      jKJKuihSSIUw2n0IahG7xUBRsGAVS4xOTGNxuHGZQJasCMU0GB3YrUY0OU8sVaSi0oPdJJGX
      BZYX5/EFqrBbLbeuAIqq8MHIO2wKbGEptchCcp6hpX7ypTwt3lY2V22l2dtKOBO6avNE0zRG
      QoMAdPrX73Tl5RyTkXFafG1YjNYbytudlhHJhFhKLSEKIpuquleuF5XyaTqFUoHZy23ixorm
      dYeKh5YGUDWVKmc1PnvlDcv4PJ/VzrfbrPgy2KjDoLesAJlihnB6mSZvC78eeIMqZzWbqras
      sgY6Op+xURXglpdD2012ooLIwOIlnu54Hust1M46OneDbDaLzWa7RgyVbLaIzXabfoFuZ9RF
      R+duMTc3j8UoYHZWIqcjmOxOouEIdY1NBOdmCNTWEArG6Ohs1neE6TyYqJpGsVggXShhEjQE
      sUDf8R5SikA6nV6JpyuAzgOHz+dFFAQkSaK6qgqjwYAgWmjb3o0VBZvdiddXPhRe3xKp88Dh
      8/lW3KV/Rqen/LuqavUInG4BdB5qdAXQeajRm0A69y2nPv2AroPPYFLKJz6qcp5UQWNxeoza
      lg7MKIgmC+FoHL85S9pci0EykI8F8dU0YjMbdAXQuT9RclGymJgaGcduAgQNUVARTA4cLi9V
      lQ56zw7TVO8lERyj6K3C7U4TLRkoJDKEU6Ps2rZZbwLp3J+EIhkeP3SIygormlIgmcnjdDjI
      5/NYzSJLkSR1dbUU5RJWuwOzyYLJZMKMjCaZsFnLE7drlkJYrfqMrs6dJ5fL3R9LIfRD8nQe
      JvQmkM5Dja4AOg8E89OjLCyt3TYZj0RYceumFEjnV2/U0ds7Og8EOVkAOcxoPITXrBEsaCRT
      BWxqBme+hXRwmtqqCqKGAIt9J3DVd7Cru123ADr3P0ouSiiSIhSOoyoFJmcWcHkrUZJRXJV+
      NA08ldX4K5yomSiGinqEy5uZ9EPydO4JG3VDjG4BdB5qdAXQeajRFUDnvkJTCgwNDhJLZtaE
      ZbPZVb/Dy0GGhwZJpPOkM2vjgz4KpHOfMTk+SWvXJqRiiot9A3i8HhLLSwRqa7nUf4ldO3cR
      nJuhadMOIok0HW0tjM8uYTGJzE2NU1nbQHx56cbco+vobDQsJolUOk8yvERFbRO5VAKrzUom
      X6Kuro5kNEQ2sUQ4JUOpwKlTZ/D6A+RyCZAcOIU8oVSeucuHaegWQOe+ora5nfmZKdz+JsTQ
      Ak1tnYQXZvDVVJGKaFjsLgwWO5UuA6q1la7NNlKpFPV1reQzSfIGF3X+It7KsutIfRhU556g
      D4Pq6GxAdAXQ2fB8cXTnWuTz+ZtKW+8D6Gx45udn6ejoIhKJoAFoGqIoUsylKWhGJCVHMpMH
      wYDZBKWiQn1TIzNT01Q3NKIWS0AJOZdGsjiIhEK4fQFqAj7dAujcP0SiESLRKNlEiGiqwNTU
      FJlMBgURo8FAhdWMYjDT1dlAz5FemjZ1E1qcJhqJE41GSKQLqKkk9V2bSSXKh2essQCpVGqN
      YB2dLxOjCLMLSxhQKUlW7G4vVlXFUl9HSbTidtpQFAWTJGFSiwwOz3Lgyb1MDg1Q3dBCeH4S
      yerC73biMIsM9PeBVPawfdOjQIqiIElX9y1/u+H3i4x7kc+NkIc7lcZGGQXSFJnJqRnqm1sx
      ScLV+wCJRByzqDI2HaSpvQunpRz1swfV5CyJbIng/DyeyipqAt5V4QBD/Rdp7tyCxXjl2ufD
      c8kok8txTHIWf1MnbptpdRxNZWxkmGy+SENrBxVO25o0YuElIvEkCgY621sQvhD+eZaXlwgE
      qtakMTU+jL2iBlEr4vNVrglfWpglX5BJZIps2bIJSVj9LOlkjOVwjHg8RntnNy6HdVW4nIlT
      NDqYGR2ioqqO6sqKNTLi8TixyDIYbLQ01a8JXw7OURIt1H7Bs9lKHFVmcHAEs9WKxe6mtsq3
      VkZ4iem5ReweL+3NDWvCi9kkk3NLCJpKfUs7NpO0Js713uXSwix5zUiNy0DBXInz3pyidcMI
      kpHWtraV31ftAwTnpukbnWZLdzsL07NrwuVsgpmpMSwVNYRDy+umIRlNLM9NMTE9t2743MIi
      LiGDsaKWxfmFNeGF+ByCuxGzxczywsy6aSwsLtPa1o5dSZMorg0Pz45y5sIgo6OjLF/loLVC
      SSMTDTI5uzYPAPF0lkwuR4NLILrOIIOqlMgXSpgsVhy2tccjFZJLDFzoxVm/mUR4aW0CwNzc
      LLKikYxH1w1PpDO4LCIjIyPEU2tHRfLxBSRXJbFknlQstG4awVCUOo8ZJZ8hUlgbPjs3R31T
      C031AeZmg+umcfrEUUZHRxkanVg3PJ7K4DSUGB8fJb3O99hoSH/5V//q3wGYjBY0TcRsLreN
      fH4/iWiYVDpHQ0sLBnH1ySqSxUkmtszI2AS79+zBKK09eUWV82TyJQJV1ZhNa42Nt8LF0Ngc
      iUiIrdu3In3h9BaD1cXs4BkKWGlpacFkXJuGr8LN1OQ0Rpsdp8ON8QuVlc3txe91EwgEEFCx
      29ce4OFwOKgMVFPIZaioqFgT7nQ4qampQS4pWK2ONTLMVjuVPjelkoYosPIOP8REfCAAABkF
      SURBVMPkrKTC5cTtsKCpKg7H2jPCPE478WQaX6AKh32tb3uLxYrD6cbn8yEX82tkGKweCpkE
      fo8d0WzH5VjnOa1GYgWR2koXJpNtzXO4XQ7O9Z4Ho42aQAVGo3FNGgIqVXVNeN3OdT2IiKqM
      anbhtBiwOjyYL8soFosYDBL5wupFaZJkwGpZ+z4iUyPkbD5mJ0axmg0shWLIhQKJ5UnGQwWc
      RpVYuoBJLNFz6jyBxjrGBvsIh+MkI0EWkiXMWoF4usDEyCUU0UwhHUMRzcRDQVTRjNlkuLoF
      mBgdpqmjm/pqHzPT82vCi/FZZEcjLz57iPGRoXXTWAzF6OhoY3pidH0Z4+Ns3bmbPTs3MTm5
      1koU43NYqrvZtbWDqcn1a5ypyUlUTSMyN0Z8nVotPD/N6OQ0o6OjLIVj66YxNjzA6OgoswtX
      qZ2nJxgdHWVqtP8qMqYYGJ0km0kxPbfWiiiFFIOjk0yOjzEzv37NOjIygiAIjIyMrBuei4fo
      Hx5ldHT0qjKCi2Ei8RQLC2u/F8DCQhA5n2Fs8MK6zzE+PkVXexOiwcT8/FqrD5DIZJkcHSYU
      Xt/KLEXj5KIL5DLpO2YBZucWKORzROIxnBYDVbUNDAwMMDE+zvTMAvU1AQCq/H4K+SxGyUR1
      fR2xWIzh4WGsDhe1lVYGhqeZmJhgObS8Mrdw1T5AQ309k9OTCJpKQ0v7mnCTuxZpaYzxiTDV
      tQ3rpuHzOBgdHcPjC9w1GVVVNZidHrQaH8V12pu+6hoMGQWPy0Y0un7zor6pFY/Hs8aj8J2S
      IZmdtLU24fF4bjkPd0LG9Z6jsa4W1exAiS1hdK89xwygKlCNx2VncGz9s6KrA1V4vBVMj/Tj
      u432v6e6mktD/ThcLuwuI2gCcknG7DQzsTCN1+sFkwOjlmc5miAA5AtlK2N1u1mancMkl7Db
      bTisZhbCGbxuG95AgEIyTKFQrgGuqgBXDhlWCUeiNNSsPndWzkRJ5lVcdpFIJExlxdrRo3Ak
      gtXuJhIO01BbdVdkLC7OQyhEJpmgbZt3bfjCAslcieVgCaurkrUxYGZqjJDdTSZXLL/YOyxD
      ToeYmA7jCodQMKwr47p5uAMyrvccsXiUZG4ZQSvLWI+5mQkidjdycf1jUCOhIJFohEw6T+Vt
      HDQvWVzs2L5l3bDtXzjBtbGl/H91XSPVdeVjbCvXqXNrqy5fDFypZK7aBPp8+85mXdsmlUw2
      Lg8SrBv++evWq5zXdCdkWC9fN3wu7s3IuLF83p4M/V1tXK6qAEVZRpaLNLZ1kUuvNamqUkRW
      FNy+agRt/cZesVjEZHVgt6xvaO6EDFkuIqsirTVOUuu0a68n40byebsy9He1cbmqAsiFIq0d
      HUwODZBIrx1205QSHn8dmWiQxVBknRTAaLFjk0qMX2UY9E7IKKkiLTVe+geHKSprw68n40by
      ebsy9He1cdH3A+jcEzbKTPAX0RfD6TzU6Aqg81CjK4DOQ42uADoPNasUQO8A69wtNmrZWhnM
      Lcp5yK6/WlJH506gKKV1r2W+xHK3Mgyqo/MwovcBdB5qdAXQeajRFUDnoWalE2w0mjEZ127n
      09EByOXTqOrqxT0Wsx1Jur9dS63k3mS0YLd5vsy86GxginJ+rQJYHPd9pak3gXQeanQF0Hmo
      0RVA56FmjQKcO9cLwEBf/w0lkIiEKKo3KTU+ybGBxXWDcqkYqdzaGcPb4diJk3c0PZ3PU+Qn
      //A6AEsTQ3x4/NwN33nhzDH6hsrePnp7y/f1DdxYuStmEiQyt+92Yk0XPh4vuw5JJpPI2QTn
      B8ZQBSM2QxFZEShqRuxiDlkzUBLMuE0iLT43v3n7fcxmI7sefZzzZ3owWOy0VLmYCcVpaulg
      duQigs3Lvp1bAZgcHSC/OEpnvRuxqovQxAA7du0iF52j4NvGmfffwW42U7t1P/P9Z7H6anAZ
      ZELxDI6KAKnQHEYjhOIKSAJP7OqgZ2Aau9PFnu3dhOYnGZsL0dzaAUAoOMv0XBCHt4ZcZBZF
      sNHVEaCnb4bm5iZaGmpu+2U+nKhYSymmo3mWI0lsmrrqXUcXRjGZrDgDjXS11DHSf554pkBF
      oJrz5wfYe6j83mOx8nKIZDIJSoGzvX1kSxrtXgtjSRlNLtHkNLMgKyhFjZ1NDuLmFs4e/6yc
      HGRh8Az5koHd21vouVT+runwLAVFoHvHPmxr3RyttQDx8CJnz55lemGZZDxOSVWZmZohmZPZ
      vXsPpWyCdKHE7t17KKbipJNJVFTc3mo21doZuXSRWMlMJLiIZLWilBRSqTQ2i4VcMkHhsrVo
      6eimq1JAq+pi6OxJkqkMAlDMJMmXwOyo4MD2FmbGhyg5W9jR3cl8OMb+/fuJhuYoCQZ279uK
      SXTgsBm52DeI2WJkcaHsd2d0cp5HDuynxl92dBWNRkCQmJqewmqzkM8lKWFBQiGZ1B0C3w5V
      7VtYHr+AIJSddX3+XQtGM3sPPEJodhKAcCzN/v0HCM3N0tjaypauVqBs+c+ePcvo5ByFTJxM
      UWF6Zop8Ok3Htt0Y1CLJZI7Nu3ejlbKU8mkyRfVKOZkdZ3QihliMsJSRVr6r1WqjmM+Rza+/
      QXmNAjS3b2bPnj1s29SOXCyAIFHh9YCcp/dsDzZPJUohS2/PGRw+Pw6XCxERl8uBye6irn0r
      XqNMXVMjkiBgNkrkc3lEgwG1VERRAYOVWHCc8aSBercZUz5ETddOAEx2FxYDuFwuMFhwBZox
      Zqa4ODBKXWUFp0+fxuuvL4djwFPhwOVysbV7E7JcorGpCYCOljpOnj5DMBzH5XJRKBSRJAmP
      240oGkAtkckr2Kxm8oWbO1RB5/OIuFxupHyS+k3da951MrLM6VMnqGvtAqCywsHp06fx17fg
      +ZwXvtrGFvbs2cOeHd0ocrmclF27KFw634tgcSAhc7H3LGabB4PFgd0kXiknnho6Wr3YvHV4
      zNLKd5VEEQmV/FU2KK/aE3yteYC+gX62dZf9tPQP9LGle9sdeX2lXIpj5wZ58tH9dyQ9nbtD
      LLGILK+uRT3uquvOA9xuWQkO92Nu2YLXBNN9A/i2dbPWkeKtc8MKoPNwc6sKsNHRh0F1Hmpu
      SgFU9WbHO3V0NjY3pQCapu+d0Xmw0JtAOg819/da1oeUUG6RnHLjZ+feDGbRQpWt9q6kvRHR
      FeA+5NjSh4wnh+9K2nX2Jl5r+/5dSXsjojeBdB5qdAXQeai5pgJoqsLUxDhFRR/90XkwuWYf
      YGJkkLxmRFU1tMuqog+Ffvnc1U+grf3GgnAbZx19SXz2DKVSCUkUQRBQVRWDYXWRv6YC5GWV
      9o4apmcWaGuu0SfCNgx3TwM0tDXf+XqnwG8kNE0jGg2TTWf4pxO/wmIwYzdamY8EMVnNPL/t
      KZobWnA6nYiidG0F6GhrZnxygaa2jpWXcD+9jAeVu1kjC4Jw335jTdOYmZ3iV0feZCazhN/k
      pk+ZpE71EBQTKDmN2Z7X2Te5iWQuzWvP/d61FcBkc7F5s+te5V9H55bQNI1ioYDBYODI6U+Z
      zAZJSHlUBUwYmJMu+x7VwIzER8u9qGi09Z/R5wF07n9UVeWH7/yILY2b6EmMEJdyAERZfSo9
      AiyrSRAADf5p+D1dAW6FXCnL6eUjdy397oqd+K1rz1XWWY2macwFZxkaHuBSZIzh0AStRj8j
      yiJp8TpHVArl5p6uALdAQcnTEz5219KvtTfoCnAdSrLM+8ff45OJ0+RLBdwlMzOmBCE1g52r
      HFGvsVL7m5B4detLugLo3J/09J3hwvQACSVDQSyRMF/Z1poR1vcWYdBEnCUzTY5qXtj5NN1b
      tuszwTr3F6qqcv5SL5tbN9Nd04EdMyICJnX1yJVDM2NTVruBUASNaqOHkqSynC6fpXxNC5BL
      J5iZX6ShuQ2beWMZi1BukUuxG/dBc7McDDyJ1WC7a+nr3Bq5XJa+0T4GlsaocweQVGi1VGEu
      ioTkJGFDBoMmUomdKWn1afdexcqotMTTvv08sfcQcB0FmJ+fQzTYMBklNE1b+bcRiBUi9IZP
      3LX0d3r3Y5Gs64bd7Xdwvff8sM4Ea5rGyQsnORy5gDfl4rd+92VOjPaQz+cIaik0ScOoSdTa
      /VQLblLpAhHxykhQRMrS5WrkG4e+vjLXcU0FaGrtRMmHmZiO0N7kRdPWzhJ+WdyLQni1Z/0y
      ZV+Ocfdkb+CZYFVVmZ6ZxKmZWZLjfNTzMb9/6BuMTY9ydLKHHd4ODA4LJkXk/bFjRAxXCr9B
      FXAIVv7suT/EbDZfuX4tgfl0gvmlJC3tHYiiiKZpG+ZliOLd7b6IonjVZ/0yZcPDNxP8mUWM
      x2NMpYIkxQII8Ivxj5ianeSpnYd4pHMvHqOTtwY+ZL4QRjFcqSQEDSQkvtb+FL6KylVpX1MB
      nBWVbPrCDTo695rxqVGG50bZ2rgZm9mCWBRAAE2A8UKQytFLHI1exG604pLsKMKVwi9q5cqi
      TQhwcO+ja9LeWD1bHZ11aG5oJZ/LUVkZAGm19U0IeQqFAk6DjaVSAmfBSIVgJSaWZ4OdgoVO
      cx2dbV3Y7Wtdat2WAsykJ8mVMtePeAs4jE7q7E13JW2djU80GmZueZ6tndswGAxs7d6Bpmm0
      +5uxhk2ksimmCFMSNHrSw7QYqwiRYEKKIAA21chOqQlXTSVP73mKqkD1unJuSwGOL33EfGb6
      dpK4Kq3OLr7eoivAw8ql8X5+cvEtnps5yIuPvYjNZkcQBH73ud/l3eO/4ejQSQQEbJoBl2al
      w9dMYjFNmAw5ScajWFHVEg7JetXCD/qWSJ0NgqIo9PT3UCiW1/Ds7d7LM9X7+PXMUX768c9Y
      CM7x/qn3URQFpVgkLKQpCSoO1Uy11cfxSB8+i2dlGURMytIrzRIvpq45oqb3AXS+dBRF4Udv
      /D2jqRnQYO/WvcglmfHQFA7BQu/yAE9kD/J637uEE1G+sv9F+uaGKOTyVBpdLCtJxLzCeeMU
      olju9OakEs6SiU2NXdcctbuuAhTyeUxm84aZDNF5sFCUEsMTw+zavAtp0khLbTMAbreHP3/1
      nxGLRPjRqZ8TTCzRZWsgnAxjtlj406/8EbF4FLfDzejEMGdHzxOV82hoFAUFq2ak0eyno6n9
      mvKv2QRSS3kOf3yE2z+IRkdnLaqqoJQUcrksf33kRwwvTeBxV6BpGn3953E4nARji/zOrpfY
      3r6Nbz/9TYyCkXdOvIvb5cFqtZHIJnl79FMcJhsVihXp8rBns72Gf/Gtv8DtrrhmHq5pAYYH
      +hENItF4ioDLjqqqq2dB7+KMqKZplEpXPytMUdY/8OBOoSjKVeV/mbIBVPXevvcvbiS/EwyO
      D3JmqAeL0cyrz75KQZVx2pwrk3CheJjg0gIHdj2yco/qdPNY537cFRXkcll+efRN/vir38WE
      xFI+SlFUqFXdlNB4vOsAZsv1Xbdf88k2b99DZXARj8eJdLkJtGqW8C7PSF7rxd/t2UpJkq4q
      X1K+PNnASjv3bnC9934niCfi/OdjPyZZzPDalpcZHR1i35Z9GAwGQstLVPoDPL7vCfK53IpC
      SpLE+fM9fDJ+kud3PEV9TT2vPfMN/vqdv2OxFKcglBBEiIs57KqJTDx5Q3m57pP6a64+hKSj
      c7Nks1l+8OGPkYtFNkk1OCwOMrkMBoOBdDrFf3n/x/zr3/+XGAwGPuz5mP2b9vL2J29hNJvZ
      0bKVueQSPz7yM5oGTuHIiOTTKXzYyAkylYIDk9HEMEHChfgN5UcfBdK5Z2iaxvvH3mMuEmS3
      t4s97Ts4O36BidQ8kUKCfZv2kFZzTE2NU1kZoJDM8PGR95GLRU7nRnjE/Qj/1Z6vgwA/OPNz
      tlmb+Ge/92eASCwRpa62gUQ8Ru9gLwd3HryhPOkKoHPPEASBp/Y/RVddOwvxJYKRRUJLiywa
      Y/zy0ns0eevx2Sv42w9+RHN9Cy/sfpKfvfc6ISWJYBCYnZmiqrKK6uo6tlZ3MrQ4TiwWwx+o
      oliSef3wL5DlIo917MdkMl8/Q+gKoHOPcbs9uN0emnKt9A1fJGrMUae4SRoK/MdPf0BRKJGV
      ZLaZ7YzMj/G9b/wxHx3/kPeDpyhl8vztxD/xePt+ljJhQkKa/+vD/4zFYCGhZCiKCmgQTcX5
      b9v/4obyoyuAzj3ls1FEq9XG3u37qfXVMBOc4fDYKeKlDF/d9Dhmg4ltbVtRVRVPhZdH9z9B
      40ITDYF6ej4YIpSM0FLRwGxqCaMmEVKTCALYFSMZUcZvcqNp2g3NXekKoHNP0DSNvpE+eibO
      I4kSv7X/ZTRNo76hiYySpyXdzDM7nsTv86+5t9pfjdvhIp/L8afPfReT2YzNZmf/0h6yuQyh
      eBiHwYbd7SJTyNBZ33HDE7e6AujcEwRBYDG2xOFgL2hwduYimkHkXz//Z3Q1d9HV3LUSV9M0
      UqkkTmfZK+HY2DCjkyO0NbeTLGT4ydlfsTnQxt7GHWzv3sl8cBaz2UKF20upJAOglEpINzCc
      e80YyWiI+eA8rkAbdX7n7Ty/jg585mZfgKRUABV+fvwNvvfcd/B5yxuvVFXlbM8p/v7iG/wP
      X/0L3G4Prx/5JRPqMq9ajczGFogoaU4FL/Hyrud5/8yH/OzSu/x261MMhyZJZlOUNAXJbOT7
      T36bxrprryi+pgI4nE5y43l8JgOKougzwRtANtyfM8GapnF+vn/lt6BBIz7C2Rh//9FPOdCx
      hyqXH1ES+YcLb1Jn9OJ2V3D64im2NXSzNJ0gF0uRVQo4MNPmacBX4eOddz6m1lJJeGmZsdQs
      RVGhy1hHTM7w4dmP+V7td6/ZHLrmk8XjcWwOB8VcHsld9pCgzwTrM8G3QiaTZia9WP6hwSOV
      2xiJThFWUhSTJc73/IQtxgZkScVtd5FRZSwWC7Kg8O7MMdJigTOhAfa37cJn9fDqod9hYnaC
      hJalUvSQFPNkRRmzJtHhbiCtFRhLzjEw1s+Wjq1Xzdc1F8N5/dVs2ryV+uprLyjS0bkeyWSC
      CqsbACcWdjVuJaakQYAIaTQBLpVmmc2HcEt2QsU4yWSCp/c8xWu7voZZkTAZjDgEC9vqNmG1
      2cjkM2gCxHJJ0qkUhsvF+cTiRWbmp5jLh3j75Lskk4mrevLQN8To3BNqa+v5ly/8KT7BwUub
      DrG5vZtHXd3UlFb3LbMUuZSeJKsVmQ5OI0kSj+54hOcbDvLHT3+Hw9M9vDP4CaVSCYfVQSUO
      oloaxShQElQKosKSMc2IJUJJUMmlMvzwR3/Db068t64S6KNAOncVTdNQFAWDwYDPW8n//Opf
      4nK5UVWVOFnCYgaf6CShZCgJKghQQgUN5sLzbJa7KRYKfOOlbzK/MEuwGEGSJeLxKK0NbdRZ
      A2QyBcZKwc8Jvfy/AFPmGNFSluKFC/iMLrZv34XZfGWVqG4BdG6LfD5/1eZFOp1iaTHIBx+9
      Q7FYIBIO4XKVm0GiKPKHT7/Gy7WPcKB+Bwecm1bW8gMgwM+G3+cH7/2I5aXg5YmtcnHNI/NJ
      z6eIosiT2x+ny1CDS7NgVQw4FBMO1USXVFP2cidA0lAgoqV5/dzbHD7+yar86hZA57Y4PHqc
      YjxDa6CF9uYOBFFkfHQYGYV3zn+AWILx0hKmM1ZioTAlh0SVt4rHtz9KJp/h3eBJiihlt+WX
      y/9nbn2MqkQplaekKszPzXBh5CLdlkYm8kEKmSyxaIRd3bvobOrg5x/8nFgsSld1G3m5QMAb
      QJ48zoS8hCbAvDlJe97HxfE+HjvwBDabHdAVQOc2KQkqx8ZO87ORD3lyeh/dnhb+8fxbpKQi
      BUorhfqng+9gFA1kI0WYgU+GjvHK9uf4ZtvzKILGT8Z+AwJYMLLf300um2UyE0RQNVA1Pjj3
      MceX+/iTba+SGviEj2MXED7RqOto5dCuJ9CMIufVabwFH19/9utMTI6yL7CF+FyaqFDuLAeN
      KXYIFeSyWV0BdO4smgCfzJ7h+EwvmqghC6s9MRREhcJnNT0wlV/iP5z6EUZN4rmafTxTsxe7
      ZKWuooqjQ6coaDL/4tnvI0oSdruDfcVdzIUWsLucOJ0uSsllZrJL9F+cZltjN+Phsnseu9WG
      2Wymwu3FYrWRTCU4mugnJeTJiyVyWoFsJk2F14coitfuAyRjIQYHLhFJ5u7OW9N5MBCu/F8U
      FWTxxhwoawIYBBGP3c2W2k5USWM5GCRbyDFeWuJvjvyY2dg8vWPnOTdxkaAa49Nzh7mYGAdg
      SA3itDq5OHiBYCmKBthdLiSDAX+gih+e+hkZCjxWuQ00KIkq54U5fvLrn3D4yIflc4OvlUGn
      x4ctGgaNdWeC76aXZH0m+MGaCb4aWUHmx+O/Kf8QoEK24FGtqGaNGTnEf+r56ZV8iCJL+Ria
      cGVJxVh6DmWmhExZ6S7ND/Gi+AIms5kn2w+we9NuCvkcH73dSxEFVdDoNy2RGDgCxesowNRI
      PznBht9iWPec4LvtpVifCV6f+3Em+NpCr/wZM+SRSus3TEqCyjThNdficpp2cw0O1cS3n/oW
      UB5leu7gcxSKBX7w6U8oCuVKq1K2YRQNhI1ZPho9zv8PyC3/YoZHpj4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      C8Bidpm9+s5zN8j0bYOueUo2mruuVQvx0q6tCxQJRBiPT/Ck+BCf7ifsD9MxO4R8IW7lXn4g
      lhDX6dpOgp9l2iaG3bvxKxhCvMi1DIb7VTo6UX8MZ+Dg4P7pnBA37doGwwnxLpD+iPA0CYDw
      NAmA8DQJgPA0CYDwNAmA8DQJgPA0CYDwNAmA8DQJgPA0CYDwtBsZDCfE/6tkMJzwNOkCCU+T
      AAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPk8FwwtNkMJzwNOkCCU+T
      AAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPk8FwwtNkMJzwNOkCCU+T
      AAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPk8FwwtNkMJzwNOkCCU+T
      AAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPuxj8o5TCcZy32RYhbtyl
      ACil3mZbhLhxFwHQdR2fz/c22yLEjZNzAOFpEgDhaRIA4WkSAOFpEgDhaRIA4WkSAOFpEgDh
      aRIA4WkSAOFpEgDhaRdjgXq93mstyHEcdP3V8yT1DpqmoWnaK9U/Hcz4tp/Dq9a/rfZfBCAS
      iZBMJm905VL/lacjcV8nAK9TD28/AHDz7ff96Ec/+hFAv98nFAoBYHbbrG9uMdCCNMpHlJs9
      IrrN2uYuyXSS7bU1OuaAdDJxsaBnGz4we6yvb9IfaPSaZY7LDRIRH2vrm4TjaWoneUqNUzLp
      5NB6x7bY2tyg3bNx+m12D4uMpGKsPXmCHoxwfLDL3v4xuclxfEPqlXLY3Vqn0uoSVH02dvJk
      smm21h9jayFa1QL5QoWRTAb9vO5XX/iD3U2Oy03iQVjb3CWRSpPf3eTUgn67xv7hCSPZLLr2
      /PoBCvldDo7LJGNB1tc3CcVStEoHdFUIjCbrW/ukszn8+lfrf3YZ5cIhe/kjEok4W2traME4
      /VaZ2umAWFBjfXuP0Wzm0uv3bH2jcsL2zh7RRIq9rXUsLQhmh0KlRcSv2NjcwtGCxKPhoe9B
      p1Flc3uXQCRO4WCbjqkIajYHxxWSYR9rG5v0BzrJeHRofbV0zO5enngqwfb6Exx/FLvboNzs
      kUrEOMnvYOkRIiH/0Pa3aiW2tvcIxRIc7m5iDHz4nB6HxTrJqM7DB+sof8i1/d1Wnc2tHfRQ
      lPLRHs2eTcSv2M0XyaYT7G5t0LW14ecAvmCExfkZ6rUCnZ6O1muzdVzi7uoMe1t71FodAoEg
      rncP+AIsLc7TqJeot01iWGzs5llcXeY4v83m5j5KOe71uo/5hQVazTqlWoupkRAPvnjE1Mo9
      yicFlldWiUSCuE/lqzE7v4DRbpIv1bizmOPz//UFqaklGpVjqrUmyuzSNd1nw56cnsPpddg5
      LnJ3dZbNJ4/RI1lOGxWKtSZTmQD5YsO1PjcxTdDps7OXZ3F1hcLRIX5tQKNjcHhS4d7KBPv7
      Jdf6dG6cdERn68kGEyv3qJwcovt8tFstLGuA2TdcawFiqSxTYzG2n2yQmFygUTkBf4hOq4b/
      /P2t1Wqu9eFYktmpDMf5PbRwhl6zio2P3mkTXyhCLpOi2XB//smRUUZTQbYerpFdvEOtdITu
      D9Ju1jG7TYrlMs1O37U+khhhZiLJwfYOofQUrXoJRw/QbTcwGhU6NgQCAdf6YDTO3MwYpeIh
      popituv0lUa/16ZdynPc7J11uYYVW702O/kyq8tLZxuqUoBCOQ5aMMrHH39MtXDovgHbBuvb
      eVZXls/uNDs/vCnn7O9EZgzdaGEMXOodi43NHVZWV0EpHEehaRrOeWjatSLxzDiuB0vlsLWx
      weLKbXQUjnLQdQ3lnPUzFRqhgI5lu90Bp9jb3mRqaZnA+Z1ymqZd9FPHc2l29o+vuH9CcbS3
      Q2pynnjQd36nnUYiHr/4veM4uD8BKB0dQDTHWDqC45w973g8ARqEozECvqsP9fXyMU0zwsJU
      CuU4KHVWrwFWr3X+/i661ncaFYoNm1tzExfPOxaPo2tnr2MgEMKyTNf66skhhi/F9Gj8bP18
      tf7C0TGW1adcqbrWt6pFql0fizPZ820QYvEEmgah9BTf/uZdDvd3XOt7rTpHlS7LC9Moztof
      jZ23XykmpudoVovDA2D0eqiBSalySiqmo8fTrMxMsrFzwtx0jt2tDUbGJl0vIRndLmgOJ6UG
      uXQEwxfm9tI8+zu7TM/dYjwTQkVShF22H9s0UI5DoVBkPDdCqW3z3gf3Ke2sMzE9h6UCTI+N
      uD55pSxsW1E4LjA9McrWQZ0PPvqATnGf7PgMo5kklh4hFXHbgwwwrQHF42NmZibZ3Cmwevce
      Wr9BMjMGShHPTjMzmnCpV5iWTeWkQG5qmvzOLtMzU+wdlenWS0xOjLO+W2Zhbsz1OfQtk2a1
      TGx8hvLuOuNTM+TzeXrtBqVSCcMwKJTr7vV9k26rBvEs3fIh2fFJjvZ3MAyDSr1z/v661xv9
      PlavTccOoFtN4pkxyscHZ/XVKoVSmdEx9/YbpkmnXiGYm6KR32J0Ypr8/i5G75TR+dt88ME3
      WV2cvnL9RqeB5Y9jt0ukc+Oc5PcwDIN6o8HG+gZTswvu9YaB3T+l3nEI+wwi6Rz1k8Ozn0ey
      aO0S6dwEfw1/VBPAjFcWwwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='Sheet 7' width='164'>
      iVBORw0KGgoAAAANSUhEUgAAAKQAAACkCAYAAAAZtYVBAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAKIElEQVR4nO2dQW8bxxmGv6Ut11RrggoLVLZkwwSKxCp6IF3BLdpTjR58qYsU+QECeqgO
      7j23IAUMxDnl2CKokZt6TlvHOfSUML3YoXKizUPZUJHJxJSluhYtmRG3h/VQFLXcnd2Z3ZnZ
      eR/AIE2Ryzk8mO+db4e7juu6LgGgCTnVAwBgHAgJtAJCAq2AkEArICTQCggJtAJCAq04qXoA
      ptFvd6i/0fUe213a3eiMXh+9Z6M7eu31v//x8MOn8y8fZ73HfN57fnqWqFhKZfy6AyGnMC7e
      41qd+u0O9Wr16Afa6/s83/J/LxO1WPJkLX7fOlEh5EuYgL1P6/S49nk8+URhwnaZuE3v4fQs
      0dlFKwS1Wsh+u0PttY/UCcjLXp+o1aRjgl58TemwksA6IVnp/XLtjt4SBsEEbTUzJ6cVQjIJ
      H9fq1F67o3o4chmXc/480VzJezSUTAvJSnLj3b+oHko6dDe8f62msbNmJoW0TsRJ2KzZ+co4
      MTMlpPUiTjJezsuveqWctZY0JRNCQkQODBHTaCEhYgzGxdSwlBsrZK9Wp/s3bh45ZQciwDLm
      UkWrZrtxQmJWlMhen6j+mSfkUkWLMm6UkA9u3YaISbCzRfSvf2pRxo0QErNiSrSaRNtbRNWf
      KxuC9kL22x365Dd/QFZMCzZbKsqW2gqJWVEhLFsqKOFaCtlvd+j+jZvmbn7ICgpKuHY/YWAl
      GjJqAivhO1M2FUtGKyH77Q59XH0DeVE3WAlPQUpthGyv3aGPq2+oHgYIIgUptRDywa3bdP/G
      TdXDADzUP/O2uCWEciHR7DaQxrr3LwGUCgkZDaa74c2WklEmJGTMADtbRP95KPWQSoSEjBmi
      1ZSaKVMXsr12BzJmjca6tNV3qkKyPYwgg0hqCaUmZL/doU+u30jr64AKJEiZipDsdCCwgMb6
      0esZRSRxIdlGCZwOtIS9vlCPMnEh22sfYaOEbQi0gxIVslerY0VtK61mrDyZmJCsVAOLiVG6
      ExMSuRGMtq1FIBEh2yZf6g7IJWKelC4kSjU4RqvJ3QqSLiRkBL5w5kmpQvZqdZRq4M/OFteq
      W5qQ/XaHGrfQ4gEBcMyS0oTE7AhC2euHLnCkCImFDOAmZIEjRUjICCLRak79k7CQse9wBeyl
      uzF1lhQWsvHubdFDABuZMksKCeldECpj930B6TBllhQSErMjEMJnlowtJGZHIIzPrxVjC4mF
      DBBmsE9uvXbkpVjXh0TfEcRmsE/us//RcKdH7u5Toodf0MnqL0Z/jifkRlfa+IAlDPZpuN2j
      4Tebx/7kNurkLFWJKKaQOGcNuBns0/DrTRru9Ka+xd1sjYSMnCHRCAehDPbJ3e7RQesBffvw
      i0AZiYiGjUOfIs+QkBFMJaAsh8HKdmQhv0SrB0zCUZbDYGU7kpAo12DE5GpZkGGjTrkrV6MJ
      CRkBK8vudo/cwb7UQ7ubrWhColxbjISyHEYkIVGuLURyWQ5j2KhHEBLNcHtIsCyHwS1k71PM
      jplHoG0jC24hH9c+T3IcQBUpl+UwuIREfswgCstyEHxCIj9mBw3KchBcQiI/Go5mZTkILiF3
      N3BZPSPRtCwHwZ0hgUFoXpaDQIbMEO52z4iyHESokP12BzOkzrB8+M2mMWU5iHAhMTvqicFl
      OYhYP2EA6nB3n45KcxYJFRItHw0wqG0jSqiQaPkoJKNlOQiuRQ1ImRT2HuoKMqQuWFSWg4CQ
      qrGwLAcBIVVhcVkOAn3INEFZDgUzZBoYuMlBFVhlJ8zwq3+jLEcgVMjKz87T4BHKdlwgYzQS
      vYE7AFGBkEArQoWcOTefxjgyi/tioHoIRoEZMmGGz3ZVD8EoQoU8iRlSiAMIGQnMkAlz8GRb
      9RCMIjxDnsUMKQrKNj9Y1KTAt092VA/BGCAk0IpQIfPLlTTGkWkOnmyj/cMJ16IGs6Q4yJF8
      YJWdEmj/8MElJMq2OGj/8MFXstH6kQJyZDjIkCmCHBkOl5CF69eSHocVIEeGw72omUWOFAY5
      MhxuIfM/gZAyQI4MhltI5Eg5IEcGwy0kcqQckCOn4xSK0RrjyJHiIEcGcGYumpCFX2OWlMEB
      dv/44iyUIwqJsi0FlG1/nMWL0c9lo2yL4754oXoI2uEslKPPkEQo2zIYPttF+2eC3FLVe4z6
      QZRtOaD9c4hTKJITV0giSCkD5MgxzsyNnsYSchZnbYRB++eQ3E9/efg8zgEK16/hzI0EkCNf
      luuF8uj/sXeMY3EjDnIkHZGRSEDI0uqK6Fisx/Yc6RSKlPvVb4+8JvSbGixuxLA9R07OjkSC
      Qs6//abIxwHZmyOdQpFyV64ee134V4eYJcWwNUc6C2WiQvHY68JCln6/InoIq7ExR443wicR
      FnLm3DxmSQGszJFn5nzzI5GkCwVglhTDpu1oTqFIJyZW1uNIEXLm3DykFMCmsu1cuuybHRnS
      LqVSWl3B2ZuY2LIdzSkUj5wm9EPqtX3QBoqHLdvRJpvgvu+R+YX55Qo28MYk6+0ftgE3DOlX
      P/sBZslYZDlHhi1kxpEuJBY48chy+ydsITNOIteHLK2uoHTHIIs50lkohy5kxknsgqUo3dHJ
      Wo6MUqoZiQk5c26ezr//XlKHzyRZypGjrWWcpZqR6CWd88sV5MkIZClHOpcuc62qJ0n8GuPI
      k9HIQo7kaYBPI5WL3iNP8mN6jnQKRTrx+u9ifz4VIZEn+TE5R8bNjeOkdluQ/HIFUnJgao5k
      MsbJjeOkep8aSMmHidvR4i5iJkn9xkn55Qo2YYRgWtnOXbkaexFz7FhSjhKRwvVr2GUegEnb
      0WTKSKTw1nLzb7+JdtAUTNmOJltGIsX3Olx8/z00zqege/snCRmJNLj5Zml1BZnSB51zZFIy
      EmkgJJGXKbH6PoqO7R/24/6kZCTSREgitIT80ClHpiEjkUZCEkHKSXTJkex04LQf98tEKyGJ
      PCnL//grVuCkR44cnZsWOB0Y6ftc13VT+aYYbP3pA9r68weqhyHE2ctz4W8KIF/5saSRRMMp
      FMm5dDnxEj2JdjPkOKXVFetLuIocmVZe9ENrIYlQwtPOkc5CObW86Pv9OpfsSUws4aIl+8Qr
      c3TqwoKk0UxHVYk+Ng6ThCQiGjzq0tdvvUP9e+uqh8KFqJBEyefI3FLVu3hoSguXIIwTkvH8
      3jp133qHBo+6qocSiAwhT11YpBOvyJeFZUVV5dkPY4Vk6F7GZQgpu2zrUp79MF5IIq+MP/3w
      rpZiyhAy973v0nd+KL75ld0TRpfy7EcmhGToKKYMIYmITv/oNXJOzcT6rAkiMjIlJEMnMWUJ
      GSdHjkrzUlV7ERmZFJKhg5iyhIySI3XOiGFkWshxnt9bp//+7S49/fBuqt8rS0ii4PYPK8vO
      QlmrVXNUrBGSwWbN5/fXU+llyhTSL0c6C2XKLVWNlnAc64QcJw05ZQp56sIinbx4cXRbDZOy
      IS//B6QFG5BIycd9AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
      2M6FGGof4f8DN7c6IuFsFGAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='map' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
